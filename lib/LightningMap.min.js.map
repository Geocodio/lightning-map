{"version":3,"sources":["webpack://LightningMap/webpack/universalModuleDefinition","webpack://LightningMap/webpack/bootstrap","webpack://LightningMap/./src/defaultOptions.js","webpack://LightningMap/./src/index.js","webpack://LightningMap/./src/Map.js","webpack://LightningMap/./src/TileConversion.js","webpack://LightningMap/./src/Tile.js","webpack://LightningMap/./src/Marker.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","source","x","y","z","concat","zoom","center","tileSize","panAccelerationMultiplier","maxPanAcceleration","throwTimingThresholdMs","throwVelocityThreshold","animationDurationMs","debounceIntervalMs","tileAreaMultiplier","tileZoomMultiplier","debug","color","type","_Map","_interopRequireDefault","_Marker","Map","default","Marker","_TileConversion","_Tile","_defaultOptions","canvas","options","_classCallCheck","this","getContext","Error","context","assign","defaultMapOptions","initializeState","attachEvents","applyStyles","lastDrawState","draw","requestAnimationFrame","state","canvasDimensions","width","height","tiles","grid","gridHash","relativeTileOffset","moveOffset","targetMoveOffset","targetMoveOffsetIsCoord","moveAnimationStart","dragStartPosition","lastEventActionTime","startZoom","targetZoom","zoomAnimationStart","scale","lastMouseMoveEvent","mouseVelocities","markers","zoomValueIsValid","performance","now","coord","Array","isArray","length","map","parseFloat","arguments","undefined","pixelToLatLon","position1","position2","time1","time2","_this","addEventListener","event","preventDefault","isReadyForEvent","deltaY","setZoom","centerX","centerY","setTargetMoveOffset","clientX","clientY","timingThreshold","thresholdsToConsider","filter","threshold","averageVelocity","reduce","accumulator","velocity","multiplier","Math","min","updateCenter","vx","calculateVelocity","vy","round","sqrt","push","style","cursor","canvasSize","tilesCount","ceil","time","values","join","timestamp","progress","max","percentage","easeOutQuad","latLonToPixel","latLon","newZoomDiff","abs","newZoom","roundedZoom","diff","pow","lat2tile","lon2tile","horizontalTiles","getTilesCount","verticalTiles","centerYRounded","floor","centerXRounded","startX","startY","tileX","tileY","tile","ensureTileAsset","_this2","id","Image","tileId","src","loaded","onload","lastRequested","Date","getTime","_this3","allTiles","maxTilesToKeep","tileExpirationCutOff","tilesToConsider","sort","a","b","tilesToDeleteCount","splice","forEach","drawState","JSON","stringify","updateMoveOffset","updateZoom","calculateGrid","garbageCollect","shouldRedraw","drawTiles","drawMarkers","canvasWidth","canvasHeight","centerOffset","fillStyle","fillRect","horizontalOverflow","verticalOverflow","drawImage","drawGenericBackground","err","strokeStyle","strokeRect","beginPath","arc","PI","fill","size","increment","lineX","lineY","moveTo","lineTo","stroke","nw","se","_this4","bounds","getMapBounds","visibleMarkers","marker","coords","position","render","TileConversion","lon","rounded","lat","log","tan","cos","atan","exp","ne","tile2lat","tile2lon","sw","pixel","pointDiff","mapDimensions","Tile","_x","_y","_zoom","_coords","_options","defaultMarkerOptions","renderFunction","renderMarker","renderCircle","renderDonut","save","restore","lineWidth","markerWidth","transform","bezierCurveTo"],"mappings":"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","file":"LightningMap.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"LightningMap\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"LightningMap\"] = factory();\n\telse\n\t\troot[\"LightningMap\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","export const defaultMapOptions = {\n  /**\n   * Common options\n   */\n  source: (x, y, z) => `https://maps.geocod.io/tiles/base/${z}/${x}/${y}.png`,\n  zoom: 12,\n  center: [38.841779, -77.088312],\n\n  /**\n   * Width and height in pixels for each tile, you most likely do not want to change this.\n   */\n  tileSize: 256,\n\n  /**\n   * Determines the distance travelled when panning the map, the higher the value the further the\n   * distance\n   */\n  panAccelerationMultiplier: 2,\n\n  /**\n   * The maximum acceleration constant for when the map is thrown. This is in place to avoid\n   * super-sonic acceleration speeds :)\n   */\n  maxPanAcceleration: 3.5,\n\n  /**\n   * Only consider high velocity mouse movements that has been performed within this timing\n   * threshold (in milliseconds)\n   */\n  throwTimingThresholdMs: 100,\n\n  /**\n   * If the mouse panning velocity is above this threshold, it is considering a throw rather than\n   * a regular pan. We use this to pan further when the mouse is moved quickly\n   */\n  throwVelocityThreshold: 3000,\n\n  /**\n   * How quickly panning and zooming animations are executed (in milliseconds)\n   */\n  animationDurationMs: 500,\n\n  /*\n   * Used for debouncing events such as scrolling\n   */\n  debounceIntervalMs: 200,\n\n  /**\n   * Determines how many additional tiles that should be loaded, to decrease map load times when\n   * panning the map around\n\n   * Minimum value: 1.25\n   */\n  tileAreaMultiplier: 2,\n  tileZoomMultiplier: 4, // TODO: Not used currently\n\n  /**\n   * When debug mode is enabled, additional rendering artifacts are drawn. Should only be used in\n   * conjuction with development of the library\n   */\n  debug: false\n};\n\nexport const defaultMarkerOptions = {\n  /**\n   * What color should the marker be?\n   * Supports hex, rgb and rgba values\n   */\n  color: 'rgba(0, 0, 200, 0.7)',\n\n  /**\n   * Valid values: marker, circle, donut\n   */\n  type: 'marker'\n};\n","import Map from './Map';\nimport Marker from './Marker';\n\nexport default {\n  Map,\n  Marker\n};\n","import TileConversion from './TileConversion';\nimport Tile from './Tile';\nimport { defaultMapOptions } from './defaultOptions';\n\nexport default class Map {\n\n  constructor(canvas, options) {\n    if (!canvas || !canvas.getContext) {\n      throw new Error('Could not get canvas context');\n    }\n\n    this.canvas = canvas;\n    this.context = this.canvas.getContext('2d');\n\n    this.options = Object.assign({}, defaultMapOptions, options);\n\n    this.initializeState();\n    this.attachEvents();\n    this.applyStyles();\n\n    this.lastDrawState = null;\n\n    this.draw = this.draw.bind(this);\n    window.requestAnimationFrame(this.draw);\n  }\n\n  initializeState() {\n    this.state = {\n      canvasDimensions: [this.canvas.width, this.canvas.height],\n      tiles: {},\n      grid: [],\n      gridHash: null,\n      relativeTileOffset: [0, 0],\n      moveOffset: [0, 0],\n      targetMoveOffset: [0, 0],\n      targetMoveOffsetIsCoord: false,\n      moveAnimationStart: null,\n      dragStartPosition: null,\n      lastEventActionTime: null,\n      startZoom: this.options.zoom,\n      targetZoom: this.options.zoom,\n      zoomAnimationStart: null,\n      scale: 1,\n      lastMouseMoveEvent: null,\n      mouseVelocities: [],\n      markers: []\n    };\n  }\n\n  getZoom() {\n    return this.options.zoom;\n  }\n\n  setZoom(zoom) {\n    if (this.zoomValueIsValid(zoom)) {\n      this.state.lastEventActionTime = window.performance.now();\n      this.state.zoomAnimationStart = window.performance.now();\n      this.state.targetZoom = zoom;\n      this.state.startZoom = this.options.zoom;\n    }\n  }\n\n  setCenter(coord) {\n    if (!Array.isArray(coord) || coord.length !== 2) {\n      throw new Error('Please provide a valid array with a lat/lon');\n    }\n\n    coord = coord.map(coord => parseFloat(coord));\n\n    this.state.moveAnimationStart = window.performance.now();\n    this.state.targetMoveOffset = coord;\n    this.state.targetMoveOffsetIsCoord = true;\n  }\n\n  setTargetMoveOffset(x, y, animated = true) {\n    if (animated) {\n      this.state.moveAnimationStart = window.performance.now();\n\n      this.state.targetMoveOffset = TileConversion.pixelToLatLon(\n        [x, y],\n        this.options.center,\n        this.options.zoom,\n        this.options.tileSize\n      );\n\n      this.state.targetMoveOffsetIsCoord = true;\n    } else {\n      this.state.targetMoveOffset = [x, y];\n      this.state.targetMoveOffsetIsCoord = false;\n\n      this.state.moveOffset = this.state.targetMoveOffset;\n    }\n  }\n\n  zoomValueIsValid(zoom) {\n    return zoom >= 1 && zoom <= 18;\n  }\n\n  isReadyForEvent() {\n    if (!this.state.lastEventActionTime) {\n      return true;\n    }\n\n    const now = window.performance.now();\n    const milliSecondsSinceLastEvent = now - this.state.lastEventActionTime;\n\n    return milliSecondsSinceLastEvent > this.options.debounceIntervalMs;\n  }\n\n  calculateVelocity(position1, position2, time1, time2) {\n    return ((position1 - position2) / (time1 - time2)) * 1000;\n  }\n\n  attachEvents() {\n    this.canvas.addEventListener('wheel', event => {\n      event.preventDefault();\n\n      if (this.isReadyForEvent()) {\n        if (event.deltaY > 5) {\n          this.setZoom(this.options.zoom - 1);\n        } else if (event.deltaY < -5) {\n          this.setZoom(this.options.zoom + 1);\n        }\n      }\n    });\n\n    this.canvas.addEventListener('dblclick', event => {\n      event.preventDefault();\n\n      const centerX = this.state.canvasDimensions[0] / 2;\n      const centerY = this.state.canvasDimensions[1] / 2;\n\n      this.setTargetMoveOffset(\n        -(event.clientX - centerX),\n        -(event.clientY - centerY)\n      );\n\n      this.setZoom(this.options.zoom + 1);\n    });\n\n    this.canvas.addEventListener('mousedown', event => {\n      event.preventDefault();\n\n      this.state.mouseVelocities = [];\n\n      this.state.dragStartPosition = [\n        event.clientX - this.state.moveOffset[0],\n        event.clientY - this.state.moveOffset[1]\n      ];\n    });\n\n    this.canvas.addEventListener('mouseup', event => {\n      event.preventDefault();\n\n      const x = -(this.state.dragStartPosition[0] - event.clientX);\n      const y = -(this.state.dragStartPosition[1] - event.clientY);\n\n      if (this.state.moveOffset[0] !== 0 || this.state.moveOffset[1] !== 0) {\n        const now = window.performance.now();\n        const timingThreshold = now - this.options.throwTimingThresholdMs;\n\n        const thresholdsToConsider = this.state.mouseVelocities\n          .filter(threshold => threshold[0] > timingThreshold)\n          .map(threshold => threshold[1]);\n\n        const velocitySum = thresholdsToConsider.reduce(\n          (accumulator, velocity) => accumulator + velocity,\n          0\n        );\n\n        const averageVelocity = velocitySum / thresholdsToConsider.length;\n\n        if (averageVelocity >= this.options.throwVelocityThreshold) {\n          let multiplier = averageVelocity / this.options.throwVelocityThreshold\n            * this.options.panAccelerationMultiplier;\n\n          multiplier = Math.min(multiplier, this.options.maxPanAcceleration);\n\n          this.setTargetMoveOffset(\n            x * multiplier,\n            y * multiplier\n          );\n        } else {\n          this.updateCenter();\n        }\n      }\n\n      this.state.dragStartPosition = null;\n    });\n\n    this.canvas.addEventListener('mousemove', event => {\n      event.preventDefault();\n\n      if (this.state.dragStartPosition) {\n        const x = -(this.state.dragStartPosition[0] - event.clientX);\n        const y = -(this.state.dragStartPosition[1] - event.clientY);\n\n        const now = window.performance.now();\n\n        const vx = this.calculateVelocity(this.state.moveOffset[0], x, now, this.state.lastMouseMoveEvent);\n        const vy = this.calculateVelocity(this.state.moveOffset[1], y, now, this.state.lastMouseMoveEvent);\n\n        const velocity = Math.round(Math.sqrt((vx * vx) + (vy * vy)));\n\n        this.state.mouseVelocities.push([now, velocity]);\n\n        this.setTargetMoveOffset(x, y, false);\n        this.state.lastMouseMoveEvent = window.performance.now();\n      }\n\n      return false;\n    });\n  }\n\n  applyStyles() {\n    this.canvas.style.cursor = 'grab';\n  }\n\n  getTilesCount(canvasSize) {\n    let tilesCount = Math.ceil(canvasSize / this.options.tileSize) * this.options.tileAreaMultiplier;\n\n    if (tilesCount % 2 === 0) {\n      tilesCount++;\n    }\n\n    return tilesCount;\n  }\n\n  easeOutQuad(time) {\n    return time * (2 - time);\n  }\n\n  updateMoveOffset() {\n    const targetMoveOffsetChanged = Object.values(this.state.moveOffset).join(',')\n      !== Object.values(this.state.targetMoveOffset).join(',');\n\n    if (targetMoveOffsetChanged) {\n      const timestamp = window.performance.now();\n\n      const progress = Math.max(timestamp - this.state.moveAnimationStart, 0);\n      const percentage = this.easeOutQuad(progress / this.options.animationDurationMs);\n\n      let targetMoveOffset = this.state.targetMoveOffset;\n\n      if (this.state.targetMoveOffsetIsCoord) {\n        targetMoveOffset = TileConversion.latLonToPixel(\n          this.state.targetMoveOffset,\n          this.options.center,\n          this.options.zoom,\n          this.options.tileSize,\n          this.state.canvasDimensions\n        );\n      }\n\n      if (percentage >= 0.99) {\n        this.state.moveOffset = targetMoveOffset;\n      } else {\n        this.state.moveOffset = [\n          this.state.moveOffset[0] + (targetMoveOffset[0] - this.state.moveOffset[0]) * percentage,\n          this.state.moveOffset[1] + (targetMoveOffset[1] - this.state.moveOffset[1]) * percentage\n        ];\n      }\n\n      const targetHasBeenReached = Object.values(this.state.moveOffset).join(',')\n        === Object.values(targetMoveOffset).join(',');\n\n      if (targetHasBeenReached) {\n        this.updateCenter();\n      }\n    }\n  }\n\n  updateCenter() {\n    const latLon = TileConversion.pixelToLatLon(\n      this.state.moveOffset,\n      this.options.center,\n      this.options.zoom,\n      this.options.tileSize\n    );\n\n    this.setTargetMoveOffset(0, 0, false);\n    this.options.center = latLon;\n  }\n\n  updateZoom() {\n    if (this.options.zoom !== this.state.targetZoom) {\n      const progress = Math.max(window.performance.now() - this.state.zoomAnimationStart, 0);\n      const percentage = this.easeOutQuad(progress / this.options.animationDurationMs);\n\n      const differenceFromTarget = Math.abs(this.state.targetZoom - this.state.startZoom);\n      const newZoomDiff = differenceFromTarget * percentage;\n      const newZoom = percentage >= 0.99\n        ? this.state.targetZoom\n        : (this.state.startZoom + newZoomDiff);\n\n      this.options.zoom = newZoom;\n\n      const roundedZoom = Math.round(this.options.zoom);\n      const diff = this.options.zoom - roundedZoom;\n\n      this.state.scale = Math.pow(2, diff);\n    } else {\n      this.state.scale = 1;\n    }\n  }\n\n  calculateGrid() {\n    const centerY = TileConversion.lat2tile(this.options.center[0], Math.round(this.options.zoom), false);\n    const centerX = TileConversion.lon2tile(this.options.center[1], Math.round(this.options.zoom), false);\n    const gridHash = [centerY, centerX].join(',');\n\n    const gridNeedsToBeUpdated = this.state.gridHash !== gridHash;\n\n    if (!gridNeedsToBeUpdated) {\n      return;\n    }\n\n    const horizontalTiles = this.getTilesCount(this.state.canvasDimensions[0]);\n    const verticalTiles = this.getTilesCount(this.state.canvasDimensions[1]);\n\n    // noinspection JSSuspiciousNameCombination\n    const centerYRounded = Math.floor(centerY);\n    const centerXRounded = Math.floor(centerX);\n\n    this.state.relativeTileOffset = [\n      Math.abs(centerX - centerXRounded),\n      Math.abs(centerY - centerYRounded)\n    ];\n\n    const startX = centerXRounded - Math.floor(horizontalTiles / 2);\n    const startY = centerYRounded - Math.floor(verticalTiles / 2);\n\n    let grid = [];\n\n    for (let y = 0; y < verticalTiles; y++) {\n      for (let x = 0; x < horizontalTiles; x++) {\n        if (!grid[x]) {\n          grid[x] = [];\n        }\n\n        const tileX = startX + x;\n        const tileY = startY + y;\n\n        if (tileX >= 0 && tileY >= 0) {\n          const tile = new Tile(tileX, tileY, Math.round(this.options.zoom));\n\n          this.ensureTileAsset(tile);\n\n          grid[x][y] = tile;\n        }\n      }\n    }\n\n    this.state.grid = grid;\n    this.state.gridHash = gridHash;\n  }\n\n  ensureTileAsset(tile, expandTilesOnLoad = true) {\n    if (!(tile.id in this.state.tiles)) {\n      this.state.tiles[tile.id] = new Image();\n      this.state.tiles[tile.id].tileId = tile.id;\n      this.state.tiles[tile.id].src = this.options.source(Math.floor(tile.x), Math.floor(tile.y), tile.zoom);\n      this.state.tiles[tile.id].loaded = false;\n      this.state.tiles[tile.id].onload = () => {\n        this.state.tiles[tile.id].loaded = true;\n      };\n    }\n\n    this.state.tiles[tile.id].lastRequested = new Date().getTime();\n  }\n\n  garbageCollect() {\n    const allTiles = Object.values(this.state.tiles);\n\n    if (allTiles.length > this.maxTilesToKeep()) {\n      const tileExpirationCutOff = new Date().getTime() - 5000;\n\n      const tilesToConsider = allTiles\n        .filter(tile => tile.lastRequested < tileExpirationCutOff)\n        .sort((a, b) => ~~(a.lastRequested < b.lastRequested));\n\n      const tilesToDeleteCount = this.maxTilesToKeep() - (allTiles.length - tilesToConsider.length);\n\n      tilesToConsider\n        .splice(tilesToConsider.length - tilesToDeleteCount)\n        .forEach(tile => {\n          tile.src = '';\n          delete this.state.tiles[tile.tileId];\n        });\n    }\n  }\n\n  maxTilesToKeep() {\n    return 1000;\n  }\n\n  shouldRedraw() {\n    const drawState = JSON.stringify([this.state, this.options]);\n\n    if (this.lastDrawState !== drawState) {\n      this.lastDrawState = drawState;\n\n      return true;\n    }\n\n    return false;\n  }\n\n  draw() {\n    this.updateMoveOffset();\n    this.updateZoom();\n    this.calculateGrid();\n    this.garbageCollect();\n\n    if (this.shouldRedraw()) {\n      this.drawTiles();\n      this.drawMarkers();\n    }\n\n    window.requestAnimationFrame(this.draw);\n  }\n\n  drawTiles() {\n    const canvasWidth = this.state.canvasDimensions[0];\n    const canvasHeight = this.state.canvasDimensions[1];\n\n    const tileSize = this.options.tileSize * this.state.scale;\n\n    const centerOffset = [\n      tileSize / 2 - (this.state.relativeTileOffset[0] * tileSize),\n      tileSize / 2 - (this.state.relativeTileOffset[1] * tileSize)\n    ];\n\n    this.context.fillStyle = '#EEE';\n    this.context.fillRect(0, 0, canvasWidth, canvasHeight);\n\n    const horizontalTiles = this.getTilesCount(canvasWidth);\n    const verticalTiles = this.getTilesCount(canvasHeight);\n\n    const horizontalOverflow = (horizontalTiles * tileSize) - canvasWidth;\n    const verticalOverflow = (verticalTiles * tileSize) - canvasHeight;\n\n    for (let y = 0; y < verticalTiles; y++) {\n      for (let x = 0; x < horizontalTiles; x++) {\n        const tile = this.state.grid[x][y];\n\n        if (tile) {\n          const tileX = this.state.moveOffset[0] + centerOffset[0]\n            + (x * tileSize - horizontalOverflow / 2);\n\n          const tileY = this.state.moveOffset[1] + centerOffset[1]\n            + (y * tileSize - verticalOverflow / 2);\n\n          try {\n            if (this.state.tiles[tile.id].loaded) {\n              this.context.drawImage(this.state.tiles[tile.id], tileX, tileY, tileSize, tileSize);\n            } else {\n              this.drawGenericBackground(tileX, tileY, tileSize);\n            }\n          } catch (err) {\n            this.drawGenericBackground(tileX, tileY, tileSize);\n          }\n\n          if (this.options.debug) {\n            this.context.strokeStyle = 'green';\n            this.context.strokeRect(tileX, tileY, tileSize, tileSize);\n          }\n        }\n      }\n    }\n\n    if (this.options.debug) {\n      this.context.fillStyle = 'rgba(200, 0, 0, 0.7)';\n      this.context.beginPath();\n      this.context.arc(canvasWidth / 2, canvasHeight / 2, 5, 0, 2 * Math.PI);\n      this.context.fill();\n    }\n  }\n\n  drawGenericBackground(x, y, size) {\n    const increment = size / 8;\n\n    this.context.beginPath();\n    for (let lineX = increment; lineX < size; lineX += increment) {\n      for (let lineY = increment; lineY < size; lineY += increment) {\n        this.context.moveTo(x, y + lineY);\n        this.context.lineTo(x + size, y + lineY);\n\n        this.context.moveTo(x + lineX, y);\n        this.context.lineTo(x + lineX, y + size);\n      }\n    }\n    this.context.strokeStyle = '#DDD';\n    this.context.stroke();\n\n    this.context.strokeStyle = '#CCC';\n    this.context.strokeRect(x, y, size, size);\n  }\n\n  getMapBounds() {\n    const nw = TileConversion.pixelToLatLon(\n      [this.state.canvasDimensions[0] / 2, (this.state.canvasDimensions[1] / 2)],\n      this.options.center,\n      this.options.zoom,\n      this.options.tileSize\n    );\n\n    const se = TileConversion.pixelToLatLon(\n      [-this.state.canvasDimensions[0] / 2, -(this.state.canvasDimensions[1] / 2)],\n      this.options.center,\n      this.options.zoom,\n      this.options.tileSize\n    );\n\n    return {\n      nw, se\n    };\n  }\n\n  drawMarkers() {\n    const bounds = this.getMapBounds();\n\n    const visibleMarkers = this.state.markers.filter(marker => {\n      return marker.coords[0] <= bounds.nw[0] && marker.coords[0] >= bounds.se[0]\n        && marker.coords[1] >= bounds.nw[1] && marker.coords[1] <= bounds.se[1];\n    });\n\n    const center = [\n      this.state.canvasDimensions[0] / 2,\n      this.state.canvasDimensions[1] / 2\n    ];\n\n    visibleMarkers.map(marker => {\n      const position = TileConversion.latLonToPixel(\n        marker.coords,\n        this.options.center,\n        this.options.zoom,\n        this.options.tileSize,\n        this.state.canvasDimensions\n      );\n\n      marker.render(this.context, [\n        center[0] - position[0] + this.state.moveOffset[0],\n        center[1] - position[1] + this.state.moveOffset[1]\n      ]);\n    });\n  }\n\n  addMarker(marker) {\n    this.state.markers.push(marker);\n  }\n\n}\n","// Based on https://wiki.openstreetmap.org/wiki/Slippy_map_tilenames#ECMAScript_.28JavaScript.2FActionScript.2C_etc..29\nexport default class TileConversion {\n  static lon2tile(lon, zoom, rounded = true) {\n    const tile = (lon + 180) / 360 * Math.pow(2, zoom);\n\n    return rounded\n      ? Math.floor(tile)\n      : tile;\n  }\n\n  static lat2tile(lat, zoom, rounded = true) {\n    const tile = (1 - Math.log(Math.tan(lat * Math.PI / 180) + 1 / Math.cos(lat * Math.PI / 180))\n      / Math.PI) / 2 * Math.pow(2, zoom);\n\n    return rounded\n      ? Math.floor(tile)\n      : tile;\n  }\n\n  static tile2lon(x, z) {\n    return x / Math.pow(2, z) * 360 - 180;\n  }\n\n  static tile2lat(y, z) {\n    const n = Math.PI - 2 * Math.PI * y / Math.pow(2, z);\n\n    return 180 / Math.PI * Math.atan(0.5 * (Math.exp(n) - Math.exp(-n)));\n  }\n\n  static tile2boundingBox(x, y, zoom) {\n    return {\n      ne: [\n        TileConversion.tile2lat(y, zoom),\n        TileConversion.tile2lon(x + 1, zoom)\n      ],\n\n      sw: [\n        TileConversion.tile2lat(y + 1, zoom),\n        TileConversion.tile2lon(x, zoom)\n      ]\n    };\n  }\n\n  static pixelToLatLon(pixel, center, zoom, tileSize) {\n    const pointDiff = [\n      pixel[0] / tileSize,\n      pixel[1] / tileSize\n    ];\n\n    const tileX = TileConversion.lon2tile(center[1], zoom, false) - pointDiff[0];\n    const tileY = TileConversion.lat2tile(center[0], zoom, false) - pointDiff[1];\n\n    return [\n      TileConversion.tile2lat(tileY, zoom),\n      TileConversion.tile2lon(tileX, zoom)\n    ];\n  }\n\n  static latLonToPixel(coord, center, zoom, tileSize, mapDimensions) {\n    const tileX = TileConversion.lon2tile(coord[1], zoom, false);\n    const tileY = TileConversion.lat2tile(coord[0], zoom, false);\n\n    const tileCenterX = TileConversion.lon2tile(center[1], zoom, false);\n    const tileCenterY = TileConversion.lat2tile(center[0], zoom, false);\n\n    return [\n      -(tileX - tileCenterX) * tileSize,\n      -(tileY - tileCenterY) * tileSize\n    ];\n  }\n}\n","export default class Tile {\n  constructor(x, y, zoom) {\n    this._x = x;\n    this._y = y;\n    this._zoom = zoom;\n  }\n\n  get x() {\n    return this._x;\n  }\n\n  get y() {\n    return this._y;\n  }\n\n  get zoom() {\n    return this._zoom;\n  }\n\n  get id() {\n    return [this.x, this.y, this.zoom].join('|');\n  }\n}\n","import { defaultMarkerOptions } from './defaultOptions';\n\nexport default class Marker {\n  constructor(coords, options = {}) {\n    this._coords = coords;\n    this._options = Object.assign({}, defaultMarkerOptions, options);\n  }\n\n  get coords() {\n    return this._coords;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  render(context, position) {\n    let renderFunction = null;\n\n    switch (this.options.type) {\n      case 'marker':\n        renderFunction = this.renderMarker;\n        break;\n\n      case 'circle':\n        renderFunction = this.renderCircle;\n        break;\n\n      case 'donut':\n        renderFunction = this.renderDonut;\n        break;\n    }\n\n    if (!renderFunction) {\n      throw new Error(`Unsupported marker type: \"${this.options.type}\"`);\n    } else {\n      context.fillStyle = this.options.color;\n      context.strokeStyle = this.options.color;\n\n      renderFunction = renderFunction.bind(this);\n      renderFunction(context, position);\n    }\n  }\n\n  renderCircle(context, position) {\n    context.save();\n    context.beginPath();\n    context.arc(position[0], position[1], 5, 0, 2 * Math.PI);\n    context.fill();\n    context.restore();\n  }\n\n  renderDonut(context, position) {\n    context.save();\n    context.beginPath();\n    context.lineWidth = 5;\n    context.arc(position[0], position[1], 7, 0, 2 * Math.PI);\n    context.stroke();\n    context.restore();\n  }\n\n  renderMarker(context, position) {\n    const markerWidth = 17.698069;\n    const markerHeight = 24.786272;\n\n    const x = position[0] - markerWidth / 2;\n    const y = position[1] - markerHeight;\n\n    context.save();\n    context.transform(0.184386, 0.000000, 0.000000, 0.184386, 0.551658 + x, 4.095760 + y);\n    context.beginPath();\n    context.lineWidth = 1.667195;\n    context.moveTo(45.000000, -22.212949);\n    context.bezierCurveTo(18.494941, -22.212949, -2.991863, -0.726145, -2.991863, 25.778914);\n    context.bezierCurveTo(-2.991863, 52.282306, 45.000000, 112.212950, 45.000000, 112.212950);\n    context.bezierCurveTo(45.000000, 112.212950, 92.991863, 52.282306, 92.991863, 25.777247);\n    context.bezierCurveTo(92.991863, -0.726145, 71.505059, -22.212949, 45.000000, -22.212949);\n    context.moveTo(45.000000, 43.827962);\n    context.bezierCurveTo(33.553042, 43.827962, 24.273437, 34.550024, 24.273437, 23.103067);\n    context.bezierCurveTo(24.273437, 11.656109, 33.553042, 2.376504, 45.000000, 2.376504);\n    context.bezierCurveTo(56.446958, 2.376504, 65.726563, 11.654442, 65.726563, 23.101399);\n    context.bezierCurveTo(65.726563, 34.548357, 56.446958, 43.827962, 45.000000, 43.827962);\n    context.fill();\n    context.restore();\n  }\n}\n"],"sourceRoot":""}