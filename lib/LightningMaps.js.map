{"version":3,"sources":["webpack://LightningMaps/webpack/universalModuleDefinition","webpack://LightningMaps/webpack/bootstrap","webpack://LightningMaps/./node_modules/d3-array/src/array.js","webpack://LightningMaps/./node_modules/d3-array/src/ascending.js","webpack://LightningMaps/./node_modules/d3-array/src/bisect.js","webpack://LightningMaps/./node_modules/d3-array/src/bisector.js","webpack://LightningMaps/./node_modules/d3-array/src/constant.js","webpack://LightningMaps/./node_modules/d3-array/src/cross.js","webpack://LightningMaps/./node_modules/d3-array/src/descending.js","webpack://LightningMaps/./node_modules/d3-array/src/deviation.js","webpack://LightningMaps/./node_modules/d3-array/src/extent.js","webpack://LightningMaps/./node_modules/d3-array/src/histogram.js","webpack://LightningMaps/./node_modules/d3-array/src/identity.js","webpack://LightningMaps/./node_modules/d3-array/src/index.js","webpack://LightningMaps/./node_modules/d3-array/src/max.js","webpack://LightningMaps/./node_modules/d3-array/src/mean.js","webpack://LightningMaps/./node_modules/d3-array/src/median.js","webpack://LightningMaps/./node_modules/d3-array/src/merge.js","webpack://LightningMaps/./node_modules/d3-array/src/min.js","webpack://LightningMaps/./node_modules/d3-array/src/number.js","webpack://LightningMaps/./node_modules/d3-array/src/pairs.js","webpack://LightningMaps/./node_modules/d3-array/src/permute.js","webpack://LightningMaps/./node_modules/d3-array/src/quantile.js","webpack://LightningMaps/./node_modules/d3-array/src/range.js","webpack://LightningMaps/./node_modules/d3-array/src/scan.js","webpack://LightningMaps/./node_modules/d3-array/src/shuffle.js","webpack://LightningMaps/./node_modules/d3-array/src/sum.js","webpack://LightningMaps/./node_modules/d3-array/src/threshold/freedmanDiaconis.js","webpack://LightningMaps/./node_modules/d3-array/src/threshold/scott.js","webpack://LightningMaps/./node_modules/d3-array/src/threshold/sturges.js","webpack://LightningMaps/./node_modules/d3-array/src/ticks.js","webpack://LightningMaps/./node_modules/d3-array/src/transpose.js","webpack://LightningMaps/./node_modules/d3-array/src/variance.js","webpack://LightningMaps/./node_modules/d3-array/src/zip.js","webpack://LightningMaps/./node_modules/d3-geo/src/adder.js","webpack://LightningMaps/./node_modules/d3-geo/src/area.js","webpack://LightningMaps/./node_modules/d3-geo/src/bounds.js","webpack://LightningMaps/./node_modules/d3-geo/src/cartesian.js","webpack://LightningMaps/./node_modules/d3-geo/src/centroid.js","webpack://LightningMaps/./node_modules/d3-geo/src/circle.js","webpack://LightningMaps/./node_modules/d3-geo/src/clip/antimeridian.js","webpack://LightningMaps/./node_modules/d3-geo/src/clip/buffer.js","webpack://LightningMaps/./node_modules/d3-geo/src/clip/circle.js","webpack://LightningMaps/./node_modules/d3-geo/src/clip/extent.js","webpack://LightningMaps/./node_modules/d3-geo/src/clip/index.js","webpack://LightningMaps/./node_modules/d3-geo/src/clip/line.js","webpack://LightningMaps/./node_modules/d3-geo/src/clip/rectangle.js","webpack://LightningMaps/./node_modules/d3-geo/src/clip/rejoin.js","webpack://LightningMaps/./node_modules/d3-geo/src/compose.js","webpack://LightningMaps/./node_modules/d3-geo/src/constant.js","webpack://LightningMaps/./node_modules/d3-geo/src/contains.js","webpack://LightningMaps/./node_modules/d3-geo/src/distance.js","webpack://LightningMaps/./node_modules/d3-geo/src/graticule.js","webpack://LightningMaps/./node_modules/d3-geo/src/identity.js","webpack://LightningMaps/./node_modules/d3-geo/src/index.js","webpack://LightningMaps/./node_modules/d3-geo/src/interpolate.js","webpack://LightningMaps/./node_modules/d3-geo/src/length.js","webpack://LightningMaps/./node_modules/d3-geo/src/math.js","webpack://LightningMaps/./node_modules/d3-geo/src/noop.js","webpack://LightningMaps/./node_modules/d3-geo/src/path/area.js","webpack://LightningMaps/./node_modules/d3-geo/src/path/bounds.js","webpack://LightningMaps/./node_modules/d3-geo/src/path/centroid.js","webpack://LightningMaps/./node_modules/d3-geo/src/path/context.js","webpack://LightningMaps/./node_modules/d3-geo/src/path/index.js","webpack://LightningMaps/./node_modules/d3-geo/src/path/measure.js","webpack://LightningMaps/./node_modules/d3-geo/src/path/string.js","webpack://LightningMaps/./node_modules/d3-geo/src/pointEqual.js","webpack://LightningMaps/./node_modules/d3-geo/src/polygonContains.js","webpack://LightningMaps/./node_modules/d3-geo/src/projection/albers.js","webpack://LightningMaps/./node_modules/d3-geo/src/projection/albersUsa.js","webpack://LightningMaps/./node_modules/d3-geo/src/projection/azimuthal.js","webpack://LightningMaps/./node_modules/d3-geo/src/projection/azimuthalEqualArea.js","webpack://LightningMaps/./node_modules/d3-geo/src/projection/azimuthalEquidistant.js","webpack://LightningMaps/./node_modules/d3-geo/src/projection/conic.js","webpack://LightningMaps/./node_modules/d3-geo/src/projection/conicConformal.js","webpack://LightningMaps/./node_modules/d3-geo/src/projection/conicEqualArea.js","webpack://LightningMaps/./node_modules/d3-geo/src/projection/conicEquidistant.js","webpack://LightningMaps/./node_modules/d3-geo/src/projection/cylindricalEqualArea.js","webpack://LightningMaps/./node_modules/d3-geo/src/projection/equalEarth.js","webpack://LightningMaps/./node_modules/d3-geo/src/projection/equirectangular.js","webpack://LightningMaps/./node_modules/d3-geo/src/projection/fit.js","webpack://LightningMaps/./node_modules/d3-geo/src/projection/gnomonic.js","webpack://LightningMaps/./node_modules/d3-geo/src/projection/identity.js","webpack://LightningMaps/./node_modules/d3-geo/src/projection/index.js","webpack://LightningMaps/./node_modules/d3-geo/src/projection/mercator.js","webpack://LightningMaps/./node_modules/d3-geo/src/projection/naturalEarth1.js","webpack://LightningMaps/./node_modules/d3-geo/src/projection/orthographic.js","webpack://LightningMaps/./node_modules/d3-geo/src/projection/resample.js","webpack://LightningMaps/./node_modules/d3-geo/src/projection/stereographic.js","webpack://LightningMaps/./node_modules/d3-geo/src/projection/transverseMercator.js","webpack://LightningMaps/./node_modules/d3-geo/src/rotation.js","webpack://LightningMaps/./node_modules/d3-geo/src/stream.js","webpack://LightningMaps/./node_modules/d3-geo/src/transform.js","webpack://LightningMaps/./node_modules/topojson-client/index.js","webpack://LightningMaps/./node_modules/topojson-client/src/bbox.js","webpack://LightningMaps/./node_modules/topojson-client/src/bisect.js","webpack://LightningMaps/./node_modules/topojson-client/src/feature.js","webpack://LightningMaps/./node_modules/topojson-client/src/identity.js","webpack://LightningMaps/./node_modules/topojson-client/src/merge.js","webpack://LightningMaps/./node_modules/topojson-client/src/mesh.js","webpack://LightningMaps/./node_modules/topojson-client/src/neighbors.js","webpack://LightningMaps/./node_modules/topojson-client/src/quantize.js","webpack://LightningMaps/./node_modules/topojson-client/src/reverse.js","webpack://LightningMaps/./node_modules/topojson-client/src/stitch.js","webpack://LightningMaps/./node_modules/topojson-client/src/transform.js","webpack://LightningMaps/./node_modules/topojson-client/src/untransform.js","webpack://LightningMaps/./src/Map.js","webpack://LightningMaps/./src/MapState.js","webpack://LightningMaps/./src/Marker.js","webpack://LightningMaps/./src/Polygon.js","webpack://LightningMaps/./src/Tile.js","webpack://LightningMaps/./src/TileConversion.js","webpack://LightningMaps/./src/TileLayer.js","webpack://LightningMaps/./src/defaultOptions.js","webpack://LightningMaps/./src/index.js"],"names":["Map","canvas","options","getContext","Error","context","Object","assign","initializeState","attachEvents","applyStyles","lastDrawState","draw","bind","window","requestAnimationFrame","state","canvasDimensions","width","height","tiles","moveOffset","targetMoveOffset","targetMoveOffsetIsCoord","moveAnimationStart","dragStartPosition","lastEventActionTime","startZoom","zoom","targetZoom","zoomAnimationStart","scale","lastMouseMoveEvent","mouseVelocities","markers","polygons","tileLayers","zoomValueIsValid","push","performance","now","coord","Array","isArray","length","map","parseFloat","x","y","animated","pixelToLatLon","center","tileSize","milliSecondsSinceLastEvent","debounceIntervalMs","position1","position2","time1","time2","addEventListener","event","preventDefault","isReadyForEvent","deltaY","setZoom","centerX","centerY","setTargetMoveOffset","clientX","clientY","timingThreshold","throwTimingThresholdMs","thresholdsToConsider","filter","threshold","velocitySum","reduce","accumulator","velocity","averageVelocity","throwVelocityThreshold","multiplier","panAccelerationMultiplier","Math","min","maxPanAcceleration","updateCenter","vx","calculateVelocity","vy","round","sqrt","style","cursor","time","targetMoveOffsetChanged","timestamp","progress","max","percentage","easeOutQuad","animationDurationMs","latLonToPixel","targetHasBeenReached","latLon","differenceFromTarget","abs","newZoomDiff","remainingTime","roundedZoom","diff","pow","shift","tilesZoomLevel","allTiles","values","maxTilesToKeep","tileExpirationCutOff","Date","getTime","tilesToConsider","tile","lastRequested","sort","a","b","tilesToDeleteCount","splice","forEach","src","tileId","drawState","JSON","stringify","updateMoveOffset","updateZoom","tileLayer","calculateGrid","garbageCollect","shouldRedraw","drawTiles","drawMarkers","drawPolygons","drawAttribution","nw","se","bounds","getMapBounds","visibleMarkers","marker","coords","position","render","mapState","polygon","margin","font","textBounds","measureText","attribution","fillStyle","roundedRectangle","fillText","radius","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","fill","addMarker","MapState","_center","_zoom","_tileSize","_canvasDimensions","_moveOffset","Marker","_coords","_options","renderFunction","type","renderMarker","renderCircle","renderDonut","color","strokeStyle","save","arc","PI","restore","lineWidth","stroke","markerWidth","markerHeight","transform","bezierCurveTo","POLYGON_CACHE","Polygon","sourceUrl","_sourceUrl","_geometry","fetch","then","response","json","catch","err","console","log","message","point","projectPoint","path","cachedPosition","cacheKey","projectedX","projectedY","stream","Tile","_x","_y","join","TileConversion","lon","rounded","floor","lat","tan","cos","z","n","atan","exp","ne","tile2lat","tile2lon","sw","pixel","pointDiff","tileX","lon2tile","tileY","lat2tile","mapDimensions","tileCenterX","tileCenterY","TileLayer","shouldBeDeleted","grid","gridHash","relativeTileOffset","loadedPercentage","canvasSize","tilesCount","ceil","tileAreaMultiplier","gridNeedsToBeUpdated","horizontalTiles","getTilesCount","verticalTiles","centerYRounded","centerXRounded","startX","startY","ensureTileAsset","id","tileUrl","source","Image","loaded","onload","canvasWidth","canvasHeight","centerOffset","fillRect","horizontalOverflow","verticalOverflow","drawImage","drawGenericBackground","debug","strokeRect","size","increment","lineX","lineY","totalTiles","loadedTiles","defaultMapOptions","defaultMarkerOptions","defaultPolygonOptions"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;;AAEO;AACA;;;;;;;;;;;;;ACHP;AAAe;AACf;AACA,CAAC;;;;;;;;;;;;;ACFD;AAAA;AAAA;AAAA;AAAA;AAAoC;AACF;;AAElC,sBAAsB,yDAAQ,CAAC,kDAAS;AACjC;AACA;AACQ,0EAAW,EAAC;;;;;;;;;;;;;ACN3B;AAAA;AAAoC;;AAErB;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,0DAAS;AACpB;AACA;;;;;;;;;;;;;AChCA;AAAe;AACf;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACJD;AAAA;AAA6B;;AAEd;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+BAA+B,2CAAI;;AAEnC,kBAAkB,SAAS;AAC3B,sCAAsC,SAAS;AAC/C;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACpBD;AAAe;AACf;AACA,CAAC;;;;;;;;;;;;;ACFD;AAAA;AAAkC;;AAEnB;AACf,UAAU,yDAAQ;AAClB;AACA,CAAC;;;;;;;;;;;;;ACLD;AAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACpCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8B;AACA;AACI;AACJ;AACI;AACN;AACK;AACS;;AAE3B;AACf,cAAc,iDAAQ;AACtB,eAAe,+CAAM;AACrB,kBAAkB,0DAAO;;AAEzB;AACA;AACA;AACA;AACA;;AAEA,eAAe,OAAO;AACtB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,uDAAQ;AACnB,WAAW,sDAAK,kCAAkC;AAClD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA,eAAe,OAAO;AACtB;AACA;AACA,aAAa,uDAAM;AACnB;AACA;;AAEA;AACA;;AAEA;AACA,qEAAqE,yDAAQ;AAC7E;;AAEA;AACA,sEAAsE,yDAAQ;AAC9E;;AAEA;AACA,4FAA4F,yDAAQ,CAAC,4CAAK,YAAY,yDAAQ;AAC9H;;AAEA;AACA,CAAC;;;;;;;;;;;;;AC1ED;AAAe;AACf;AACA,CAAC;;;;;;;;;;;;;ACFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;AACnB;AACF;AACN;AACU;AACF;AACN;AACM;AACiC;AACtB;AACI;AAC3B;AACE;AACI;AACF;AACJ;AACI;AACI;AACE;AACN;AACF;AACM;AACR;AAC6B;AACjB;AACF;AACV;;;;;;;;;;;;;AC1BrC;AAAe;AACf;AACA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACjCD;AAAA;AAA8B;;AAEf;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,uDAAM;AAC/B;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,uDAAM;AAC/B;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACxBD;AAAA;AAAA;AAAA;AAAoC;AACN;AACI;;AAEnB;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,uDAAM;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,uDAAM;AAC/B;AACA;AACA;AACA;;AAEA,SAAS,yDAAQ,cAAc,kDAAS;AACxC,CAAC;;;;;;;;;;;;;AC3BD;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACpBD;AAAe;AACf;AACA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACjCD;AAAe;AACf;AACA,CAAC;;;;;;;;;;;;;ACFD;AAAA;AAAe;AACf;AACA;AACA;AACA;AACA,CAAC;;AAEM;AACP;AACA;;;;;;;;;;;;;ACTA;AAAe;AACf;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACJD;AAAA;AAA8B;;AAEf;AACf,iCAAiC,+CAAM;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACbD;AAAe;AACf;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACZD;AAAA;AAAoC;;AAErB;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC,kDAAS;;AAE1C;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACnBD;AAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACbD;AAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA,2CAA2C;AAC3C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACnBD;AAAA;AAAA;AAAA;AAAA;AAA6B;AACQ;AACN;AACI;;AAEpB;AACf,WAAW,0CAAG,cAAc,+CAAM,OAAO,kDAAS;AAClD,uCAAuC,yDAAQ,iBAAiB,yDAAQ;AACxE,CAAC;;;;;;;;;;;;;ACRD;AAAA;AAAqC;;AAEtB;AACf,wCAAwC,0DAAS;AACjD,CAAC;;;;;;;;;;;;;ACJD;AAAe;AACf;AACA,CAAC;;;;;;;;;;;;;ACFD;AAAA;AAAA;AAAA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,CAAC;;AAEM;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClDA;AAAA;AAAwB;;AAET;AACf;AACA,uBAAuB,oDAAG,2CAA2C,SAAS;AAC9E,0DAA0D,SAAS;AACnE;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;;;;;;;;;;;;ACdA;AAAA;AAA8B;;AAEf;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,uDAAM;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,uDAAM;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;AChCD;AAAA;AAAoC;;AAErB;AACf,SAAS,0DAAS;AAClB,CAAC;;;;;;;;;;;;;ACJD;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4B;AACoC;AACtC;AACI;;AAEvB,kBAAkB,sDAAK;;AAE9B,cAAc,sDAAK;AACnB;AACA;AACA;AACA;AACA;;AAEO;AACP,SAAS,6CAAI;AACb,aAAa,6CAAI;AACjB,WAAW,6CAAI;AACf;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,+BAA+B,yCAAG;AAClC,iDAAiD,6CAAI;AACrD,GAAG;AACH;AACA,gBAAgB,yCAAG;AACnB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,6CAAO,SAAS,6CAAO;AACnC,8BAA8B,iDAAG,iBAAiB,+CAAS,aAAa,iDAAG;AAC3E;;AAEA;AACA,YAAY,6CAAO,SAAS,6CAAO;AACnC,kBAAkB,+CAAS,CAAC;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iDAAG;AAClB,eAAe,iDAAG;AAClB;AACA,iCAAiC,iDAAG;AACpC,yBAAyB,iDAAG;AAC5B,kBAAkB,mDAAK;;AAEvB;AACA;AACA;;AAEe;AACf;AACA,EAAE,uDAAM;AACR;AACA,CAAC;;;;;;;;;;;;;ACzED;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4B;AACmB;AAC6C;AACtC;AACxB;;AAE9B;AACA;AACA;AACA;AACA,eAAe,sDAAK;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,gDAAU;AACd,GAAG;AACH;AACA,IAAI,gDAAU;AACd;AACA;AACA;AACA,QAAQ,iDAAW;AACnB,wBAAwB,6CAAO;AAC/B,yBAAyB,6CAAO;AAChC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU,4DAAS,WAAW,6CAAO,QAAQ,6CAAO;AACpD;AACA,iBAAiB,iEAAc;AAC/B;AACA,qBAAqB,iEAAc;AACnC,IAAI,4EAAyB;AAC7B,iBAAiB,4DAAS;AAC1B;AACA;AACA,kCAAkC,6CAAO;AACzC;AACA,uBAAuB,iDAAG;AAC1B;AACA,6BAA6B,6CAAO;AACpC;AACA,KAAK;AACL,8BAA8B,6CAAO;AACrC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,iDAAG;AACpB,GAAG;AACH;AACA;AACA,EAAE,gDAAU;AACZ;AACA;;AAEA;AACA,EAAE,gDAAU;AACZ;;AAEA;AACA;AACA,EAAE,gDAAU;AACZ,MAAM,iDAAG,aAAa,6CAAO;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEe;AACf;;AAEA;AACA;AACA,EAAE,uDAAM;;AAER;AACA;AACA;;AAEA;AACA,4CAA4C,OAAO;AACnD;AACA;AACA;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;AACA;AACA,CAAC;;;;;;;;;;;;;ACvBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqH;AAC9E;AACsB;AACtB;AACZ;;AAEZ;AACf,WAAW,iDAAG;AACd,kBAAkB,6CAAO;AACzB;AACA,sBAAsB,iDAAG,OAAO,6CAAO,CAAC;;AAExC;AACA,IAAI,4DAAY;AAChB;;AAEA;AACA,WAAW,iDAAG,WAAW,iDAAG;AAC5B;;AAEA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,wCAAE,IAAI,wCAAE;AACxD;AACA;AACA;AACA;AACA;AACA,yBAAyB,2DAAU,oBAAoB,2DAAU;AACjE,yBAAyB,6CAAO;AAChC,yBAAyB,6CAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,2DAAU;AACxC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,4DAAS;AACtB,aAAa,4DAAS;;AAEtB;AACA;AACA;AACA,aAAa,iEAAc;AAC3B,eAAe,+DAAY;AAC3B;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAgB,iEAAc;AAC9B,YAAY,iEAAc;AAC1B,YAAY,iEAAc;AAC1B,IAAI,sEAAmB;;AAEvB;AACA;AACA,YAAY,+DAAY;AACxB,aAAa,+DAAY;AACzB,2BAA2B,+DAAY;;AAEvC;;AAEA,YAAY,kDAAI;AAChB,YAAY,iEAAc;AAC1B,IAAI,sEAAmB;AACvB,QAAQ,4DAAS;;AAEjB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,gBAAgB,iDAAG,SAAS,wCAAE,IAAI,6CAAO;AACzC,oCAAoC,6CAAO;;AAE3C;;AAEA;AACA;AACA;AACA,sCAAsC,iDAAG,mBAAmB,6CAAO;AACnE;AACA,kBAAkB,wCAAE;AACpB,eAAe,iEAAc;AAC7B,MAAM,sEAAmB;AACzB,iBAAiB,4DAAS;AAC1B;AACA;;AAEA;AACA;AACA;AACA,mCAAmC,wCAAE;AACrC;AACA,+BAA+B;AAC/B,mCAAmC;AACnC,4BAA4B;AAC5B,gCAAgC;AAChC;AACA;;AAEA,SAAS,sDAAI,gEAAgE,wCAAE,WAAW,wCAAE;AAC5F,CAAC;;;;;;;;;;;;;ACrLD;AAAA;AAAwC;;AAEzB;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+DAA+D,0DAAa;AAC5E,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACnBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACA;AACM;AACS;AAClB;;AAEhB;AACf;AACA;AACA,qBAAqB,uDAAU;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,mBAAmB,sDAAK;AACxB,0BAA0B,gEAAe;AACzC;AACA;AACA,UAAU,uDAAU;AACpB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA,oCAAoC,4CAAM,GAAG,6CAAO,GAAG,4CAAM;AAC7D,oCAAoC,4CAAM,GAAG,6CAAO,GAAG,4CAAM;AAC7D;;;;;;;;;;;;;AClIA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;AC1DD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;AACH;AACJ;AACI;AACH;;AAE/B;;AAEA;AACA;;AAEe;;AAEf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,WAAW,iDAAG,cAAc,6CAAO;AACnC,UAAU,iDAAG,cAAc,6CAAO;AAClC,UAAU,iDAAG,cAAc,6CAAO;AAClC,gCAAgC;AAChC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,uDAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,yCAAyC,OAAO;AAChD,kHAAkH,OAAO;AACzH;AACA,yBAAyB,yEAAyE;AAClG,gBAAgB,0EAA0E;AAC1F;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC,sDAAK;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,uDAAU;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,cAAc,qDAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACvKA;AAAA;AAAuC;;AAEvC;AACA;AACA;AACA,iBAAiB;AACjB,iBAAiB;AACjB,iBAAiB;AACjB,yBAAyB;AACzB;;AAEA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ,2DAAU;AAClB;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;;AAEA,8BAA8B,OAAO;AACrC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,OAAO;AAC/C,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,qCAAqC,QAAQ;AAC7C,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpGA;AAAe;;AAEf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACXD;AAAe;AACf;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAA6D;AACd;AACP;;AAExC;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;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gBAAgB,mDAAK,CAAC,kDAAI;AAC1B;AACA;;AAEe;AACf;AACA,EAAE,uDAAM;AACR;AACA,CAAC;;;;;;;;;;;;;ACpDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,mCAAmC;AACxE;AACA;;AAEA;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;;;;;;;;;;;;AClCA;AAAA;AAAe;;;;;;;;;;;;;ACAf;AAAA;AAAA;AAAA;AAA6B;AACD;AACD;;AAE3B,cAAc,sDAAK;AACnB,kBAAkB,sDAAK;AACvB;AACA;AACA;AACA;;AAEA;AACA,SAAS,6CAAI;AACb,aAAa,6CAAI;AACjB,WAAW,6CAAI;AACf;AACA;AACA;AACA,GAAG;AACH;AACA,mEAAmE,6CAAI;AACvE,gBAAgB,iDAAG;AACnB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;ACjD1B;AAAA;AAA2B;;AAE3B;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,6CAAI;AACjB,WAAW,6CAAI;AACf,gBAAgB,6CAAI;AACpB,cAAc,6CAAI;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;AC3B5B;AAAA;AAA6B;;AAE7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,kDAAI;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU,kDAAI;;AAEd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEe,6EAAc,EAAC;;;;;;;;;;;;;ACnG9B;AAAA;AAAA;AAAA;AAA4B;AACD;;AAEZ;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,yCAAG;AACpD;AACA;AACA;AACA,GAAG;AACH,UAAU,6CAAI;AACd;;;;;;;;;;;;;AC5CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmC;AACJ;AACD;AACI;AACI;AACF;AACA;AACF;;AAElC,+DAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM,uDAAM;AACZ;AACA;AACA;;AAEA;AACA,IAAI,uDAAM,0BAA0B,6CAAQ;AAC5C,WAAW,6CAAQ;AACnB;;AAEA;AACA,IAAI,uDAAM,0BAA0B,gDAAW;AAC/C,WAAW,gDAAW;AACtB;;AAEA;AACA,IAAI,uDAAM,0BAA0B,+CAAU;AAC9C,WAAW,+CAAU;AACrB;;AAEA;AACA,IAAI,uDAAM,0BAA0B,iDAAY;AAChD,WAAW,iDAAY;AACvB;;AAEA;AACA,kFAAkF,iDAAQ;AAC1F;;AAEA;AACA;AACA,qDAAqD,+CAAU,QAAQ,gDAAW;AAClF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;AC5DD;AAAA;AAAA;AAAA;AAA6B;AACA;AACF;;AAE3B,gBAAgB,sDAAK;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS,6CAAI;AACb;AACA;AACA,GAAG;AACH;AACA;AACA,yBAAyB,6CAAI;AAC7B,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,kDAAI;AACpB;AACA;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;AC5C5B;AAAA;AAAe;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1DA;AAAA;AAAoC;;AAErB;AACf,SAAS,iDAAG,gBAAgB,6CAAO,IAAI,iDAAG,gBAAgB,6CAAO;AACjE,CAAC;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAA4B;AACqD;AACC;;AAElF,UAAU,sDAAK;;AAEA;AACf;AACA;AACA,eAAe,iDAAG;AAClB,gBAAgB,iDAAG,WAAW,iDAAG;AACjC;AACA;;AAEA;;AAEA,0BAA0B,4CAAM,GAAG,6CAAO;AAC1C,iCAAiC,4CAAM,GAAG,6CAAO;;AAEjD,qCAAqC,OAAO;AAC5C;AACA;AACA;AACA;AACA;AACA,+BAA+B,+CAAS;AACxC,kBAAkB,iDAAG;AACrB,kBAAkB,iDAAG;;AAErB,mBAAmB,OAAO;AAC1B;AACA;AACA,iCAAiC,+CAAS;AAC1C,oBAAoB,iDAAG;AACvB,oBAAoB,iDAAG;AACvB;AACA;AACA;AACA,oCAAoC,wCAAE;AACtC;;AAEA,cAAc,mDAAK,YAAY,iDAAG,oCAAoC,iDAAG;AACzE,6CAA6C,yC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;AACA;AACA,4CAA4C,wCAAE,YAAY,yCAAG,aAAa,wCAAE,YAAY,yCAAG;AAC3F;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,iDAAG;AACvB,oBAAoB,iDAAG;AACvB,sBAAsB,iDAAG;AACzB,sBAAsB,iDAAG;;AAEzB;AACA,iBAAiB,iDAAG;AACpB,YAAY,iDAAG;AACf,YAAY,iDAAG;AACf,YAAY,iDAAG;AACf;AACA;AACA,MAAM,mDAAK;AACX,MAAM,kDAAI;AACV;AACA;;AAEA;AACA,iBAAiB,iDAAG;AACpB,YAAY,iDAAG;AACf,YAAY,iDAAG;AACf,YAAY,iDAAG;AACf;AACA;AACA,MAAM,mDAAK;AACX,MAAM,kDAAI;AACV;AACA;;AAEA;AACA;;AAEe;AACf,qCAAqC,6CAAO,cAAc,6CAAO,kCAAkC,6CAAO;;AAE1G;AACA,0CAA0C,6CAAO,mBAAmB,6CAAO;AAC3E,6BAA6B,6CAAO,oBAAoB,6CAAO;AAC/D;;AAEA;AACA,iDAAiD,6CAAO,mBAAmB,6CAAO;AAClF,6BAA6B,6CAAO,oBAAoB,6CAAO;AAC/D;;AAEA;AACA,CAAC;;;;;;;;;;;;;AC3ED;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;;;;;;;;;;;;;ACpED;AAAA;AAAe;AACf;AACA;AACA;AACA,CAAC;;AAEM;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,yBAAyB,yBAAyB,EAAE;AACpD,sBAAsB,sBAAsB,EAAE;AAC9C,yBAAyB,yBAAyB,EAAE;AACpD,uBAAuB,uBAAuB,EAAE;AAChD,4BAA4B,4BAA4B,EAAE;AAC1D,0BAA0B,0BAA0B;AACpD;;;;;;;;;;;;;ACzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACM;AACI;AACG;AACH;AACF;AACE;AACI;;;;;;;;;;;;;ACPzD;AAAA;AAAoC;;AAErB;AACf,UAAU,0DAAS;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oEAAoE;AACpE,6CAA6C;AAC7C,0DAA0D;AAC1D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACtCD;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAgC;AACI;;AAEpC,+DAAe;AACf;AACA,SAAS,mEAAmE,6BAA6B,EAAE;AAC3G;AACA,CAAC;;AAEM;AACP;AACA;AACA,4CAA4C;AAC5C;AACA,uCAAuC;AACvC,wBAAwB;AACxB,SAAS;AACT;;AAEO;AACP,uBAAuB,0DAAS;AAChC;;AAEA;AACA;AACA,2DAA2D,OAAO;AAClE;AACA;AACA,eAAe,wDAAO;AACtB;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC,OAAO;AAC3C,kDAAkD;AAClD;AACA;;AAEA;AACA;AACA,qDAAqD;AACrD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,yCAAyC;AACzC,uDAAuD;AACvD,gEAAgE;AAChE,oDAAoD;AACpD,6DAA6D;AAC7D,oDAAoD;AACpD,6DAA6D;AAC7D;AACA;AACA,YAAY;AACZ;;AAEA;AACA;;;;;;;;;;;;;ACpEA;AAAe;AACf;AACA,CAAC;;;;;;;;;;;;;ACFD;AAAA;AAAA;AAAA;AAAiC;AACH;;AAE9B;AACA;AACA;AACA,wBAAwB;AACxB;;AAEA,+DAAe;AACf,SAAS,uDAAM;AACf,CAAC;;AAEM;AACP,wBAAwB;AACxB;AACA;;AAEA;;AAEA;AACA;AACA,gEAAgE;AAChE,sCAAsC;AACtC,mDAAmD;AACnD;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA,0BAA0B,uDAAM,YAAY,8BAA8B;AAC1E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX,SAAS;AACT;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT,OAAO;;AAEP;AACA,aAAa,uDAAM;;AAEnB;AACA;AACA;AACA;AACA,iDAAiD,OAAO;AACxD;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;ACpGA;AAAA;AAAA;AAAA;AAAiC;AACH;;AAE9B,+DAAe;AACf,SAAS,uDAAM;AACf,CAAC;;AAEM;AACP;AACA;AACA,8DAA8D,OAAO;AACrE,UAAU,+BAA+B,uDAAM;AAC/C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,kDAAkD,cAAc;AAChE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gEAAgE;AAChE,0CAA0C;AAC1C,+DAA+D;AAC/D,4CAA4C;AAC5C;AACA;;AAEA;;AAEA;AACA,yBAAyB,uBAAuB;AAChD,yBAAyB,0EAA0E,EAAE;;AAErG;AACA;;;;;;;;;;;;;ACpDA;AAAA;AAA8B;;AAEf;AACf,uBAAuB;AACvB,0CAA0C,WAAW,EAAE;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,gCAAgC,cAAc,EAAE;AAChD;;AAEA;AACA,2EAA2E,gBAAgB,EAAE;AAC7F;AACA;;AAEA;AACA;AACA;AACA;AACA,qCAAqC,6BAA6B,iBAAiB,EAAE,EAAE;AACvF;;AAEA;;AAEA;AACA,kEAAkE,OAAO;AACzE,yBAAyB,OAAO;AAChC;AACA,oCAAoC,uDAAM;AAC1C,oCAAoC,uDAAM;AAC1C;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;AC5CD;AAAA;AAAA;AAA0B;AACc;;AAEzB;AACf;;AAEA;AACA;AACA,2BAA2B,qDAAI;AAC/B;AACA,iBAAiB;AACjB,GAAG;AACH;AACA;;AAEA,UAAU,4DAAW;;AAErB;AACA;AACA;;AAEA;AACA;AACA;AACA,2CAA2C,gFAAgF;AAC3H,8BAA8B,8DAA8D;AAC5F,mCAAmC,uEAAuE;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iEAAiE;AACjE;AACA,yEAAyE;AACzE,sCAAsC;AACtC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACrDD;AAAe;AACf;AACA;AACA,CAAC;;;;;;;;;;;;;ACHD;AAAe;AACf,uBAAuB;AACvB,0BAA0B;AAC1B,wBAAwB;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,mEAAmE,gCAAgC,EAAE;AACrG;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,kCAAkC,EAAE;AACjE;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,wDAAwD,EAAE;;AAEtF;AACA,CAAC;;;;;;;;;;;;;ACxED;AAAA;AAAkC;;AAEnB;AACf,gCAAgC,iDAAQ;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","file":"LightningMaps.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"LightningMaps\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"LightningMaps\"] = factory();\n\telse\n\t\troot[\"LightningMaps\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","import variance from \"./variance\";\n\nexport default function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n}\n","import {slice} from \"./array\";\nimport bisect from \"./bisect\";\nimport constant from \"./constant\";\nimport extent from \"./extent\";\nimport identity from \"./identity\";\nimport range from \"./range\";\nimport {tickStep} from \"./ticks\";\nimport sturges from \"./threshold/sturges\";\n\nexport default function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, x1, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisect(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n","export default function(x) {\n  return x;\n}\n","export {default as bisect, bisectRight, bisectLeft} from \"./bisect\";\nexport {default as ascending} from \"./ascending\";\nexport {default as bisector} from \"./bisector\";\nexport {default as cross} from \"./cross\";\nexport {default as descending} from \"./descending\";\nexport {default as deviation} from \"./deviation\";\nexport {default as extent} from \"./extent\";\nexport {default as histogram} from \"./histogram\";\nexport {default as thresholdFreedmanDiaconis} from \"./threshold/freedmanDiaconis\";\nexport {default as thresholdScott} from \"./threshold/scott\";\nexport {default as thresholdSturges} from \"./threshold/sturges\";\nexport {default as max} from \"./max\";\nexport {default as mean} from \"./mean\";\nexport {default as median} from \"./median\";\nexport {default as merge} from \"./merge\";\nexport {default as min} from \"./min\";\nexport {default as pairs} from \"./pairs\";\nexport {default as permute} from \"./permute\";\nexport {default as quantile} from \"./quantile\";\nexport {default as range} from \"./range\";\nexport {default as scan} from \"./scan\";\nexport {default as shuffle} from \"./shuffle\";\nexport {default as sum} from \"./sum\";\nexport {default as ticks, tickIncrement, tickStep} from \"./ticks\";\nexport {default as transpose} from \"./transpose\";\nexport {default as variance} from \"./variance\";\nexport {default as zip} from \"./zip\";\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n}\n","import number from \"./number\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n}\n","import ascending from \"./ascending\";\nimport number from \"./number\";\nimport quantile from \"./quantile\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return quantile(numbers.sort(ascending), 0.5);\n}\n","export default function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","export default function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n}\n\nexport function pair(a, b) {\n  return [a, b];\n}\n","export default function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","import ascending from \"./ascending\";\n\nexport default function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n}\n","export default function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n}\n","import {map} from \"../array\";\nimport ascending from \"../ascending\";\nimport number from \"../number\";\nimport quantile from \"../quantile\";\n\nexport default function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n}\n","import deviation from \"../deviation\";\n\nexport default function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","import min from \"./min\";\n\nexport default function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n","import number from \"./number\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n}\n","import transpose from \"./transpose\";\n\nexport default function() {\n  return transpose(arguments);\n}\n","// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nexport default function() {\n  return new Adder;\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add(temp, y, this.t);\n    add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n","import adder from \"./adder\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nexport var areaRingSum = adder();\n\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum.reset();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n","import adder from \"./adder\";\nimport {areaStream, areaRingSum} from \"./area\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport {abs, degrees, epsilon, radians} from \"./math\";\nimport stream from \"./stream\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum = adder(),\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","import {asin, atan2, cos, degrees, epsilon, epsilon2, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00, phi00, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  stream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport constant from \"./constant\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math\";\nimport {rotateRadians} from \"./rotation\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import clip from \"./index\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","import noop from \"../noop\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian\";\nimport {circleStream} from \"../circle\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math\";\nimport pointEqual from \"../pointEqual\";\nimport clip from \"./index\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","import clipRectangle from \"./rectangle\";\n\nexport default function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n","import clipBuffer from \"./buffer\";\nimport clipRejoin from \"./rejoin\";\nimport {epsilon, halfPi} from \"../math\";\nimport polygonContains from \"../polygonContains\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","import {abs, epsilon} from \"../math\";\nimport clipBuffer from \"./buffer\";\nimport clipLine from \"./line\";\nimport clipRejoin from \"./rejoin\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n","import pointEqual from \"../pointEqual\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {default as polygonContains} from \"./polygonContains\";\nimport {default as distance} from \"./distance\";\nimport {epsilon, radians} from \"./math\";\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nexport default function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n}\n","import length from \"./length\";\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\nexport default function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n","import {range} from \"d3-array\";\nimport {abs, ceil, epsilon} from \"./math\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nexport default function graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nexport function graticule10() {\n  return graticule()();\n}\n","export default function(x) {\n  return x;\n}\n","export {default as geoArea} from \"./area\";\nexport {default as geoBounds} from \"./bounds\";\nexport {default as geoCentroid} from \"./centroid\";\nexport {default as geoCircle} from \"./circle\";\nexport {default as geoClipAntimeridian} from \"./clip/antimeridian\";\nexport {default as geoClipCircle} from \"./clip/circle\";\nexport {default as geoClipExtent} from \"./clip/extent\"; // DEPRECATED! Use d3.geoIdentity().clipExtent(…).\nexport {default as geoClipRectangle} from \"./clip/rectangle\";\nexport {default as geoContains} from \"./contains\";\nexport {default as geoDistance} from \"./distance\";\nexport {default as geoGraticule, graticule10 as geoGraticule10} from \"./graticule\";\nexport {default as geoInterpolate} from \"./interpolate\";\nexport {default as geoLength} from \"./length\";\nexport {default as geoPath} from \"./path/index\";\nexport {default as geoAlbers} from \"./projection/albers\";\nexport {default as geoAlbersUsa} from \"./projection/albersUsa\";\nexport {default as geoAzimuthalEqualArea, azimuthalEqualAreaRaw as geoAzimuthalEqualAreaRaw} from \"./projection/azimuthalEqualArea\";\nexport {default as geoAzimuthalEquidistant, azimuthalEquidistantRaw as geoAzimuthalEquidistantRaw} from \"./projection/azimuthalEquidistant\";\nexport {default as geoConicConformal, conicConformalRaw as geoConicConformalRaw} from \"./projection/conicConformal\";\nexport {default as geoConicEqualArea, conicEqualAreaRaw as geoConicEqualAreaRaw} from \"./projection/conicEqualArea\";\nexport {default as geoConicEquidistant, conicEquidistantRaw as geoConicEquidistantRaw} from \"./projection/conicEquidistant\";\nexport {default as geoEqualEarth, equalEarthRaw as geoEqualEarthRaw} from \"./projection/equalEarth\";\nexport {default as geoEquirectangular, equirectangularRaw as geoEquirectangularRaw} from \"./projection/equirectangular\";\nexport {default as geoGnomonic, gnomonicRaw as geoGnomonicRaw} from \"./projection/gnomonic\";\nexport {default as geoIdentity} from \"./projection/identity\";\nexport {default as geoProjection, projectionMutator as geoProjectionMutator} from \"./projection/index\";\nexport {default as geoMercator, mercatorRaw as geoMercatorRaw} from \"./projection/mercator\";\nexport {default as geoNaturalEarth1, naturalEarth1Raw as geoNaturalEarth1Raw} from \"./projection/naturalEarth1\";\nexport {default as geoOrthographic, orthographicRaw as geoOrthographicRaw} from \"./projection/orthographic\";\nexport {default as geoStereographic, stereographicRaw as geoStereographicRaw} from \"./projection/stereographic\";\nexport {default as geoTransverseMercator, transverseMercatorRaw as geoTransverseMercatorRaw} from \"./projection/transverseMercator\";\nexport {default as geoRotation} from \"./rotation\";\nexport {default as geoStream} from \"./stream\";\nexport {default as geoTransform} from \"./transform\";\n","import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \"./math\";\n\nexport default function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n","import adder from \"./adder\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","import adder from \"../adder\";\nimport {abs} from \"../math\";\nimport noop from \"../noop\";\n\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","import noop from \"../noop\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","import {sqrt} from \"../math\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n","import {tau} from \"../math\";\nimport noop from \"../noop\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import identity from \"../identity\";\nimport stream from \"../stream\";\nimport pathArea from \"./area\";\nimport pathBounds from \"./bounds\";\nimport pathCentroid from \"./centroid\";\nimport PathContext from \"./context\";\nimport pathMeasure from \"./measure\";\nimport PathString from \"./string\";\n\nexport default function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n","import adder from \"../adder\";\nimport {sqrt} from \"../math\";\nimport noop from \"../noop\";\n\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","export default function PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n","import {abs, epsilon} from \"./math\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import adder from \"./adder\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian\";\nimport {asin, atan2, cos, epsilon, halfPi, pi, quarterPi, sin, tau} from \"./math\";\n\nvar sum = adder();\n\nexport default function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum.reset();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\n}\n","import conicEqualArea from \"./conicEqualArea\";\n\nexport default function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n","import {epsilon} from \"../math\";\nimport albers from \"./albers\";\nimport conicEqualArea from \"./conicEqualArea\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nexport default function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n","import {asin, atan2, cos, sin, sqrt} from \"../math\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n","import {asin, sqrt} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nexport default function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n","import {acos, sin} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nexport default function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n","import {degrees, pi, radians} from \"../math\";\nimport {projectionMutator} from \"./index\";\n\nexport function conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n","import {abs, atan, atan2, cos, epsilon, halfPi, log, pow, sign, sin, sqrt, tan} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {mercatorRaw} from \"./mercator\";\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nexport function conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n","import {abs, asin, atan2, cos, epsilon, sign, sin, sqrt} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea\";\n\nexport function conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n","import {abs, atan2, cos, epsilon, sign, sin, sqrt} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {equirectangularRaw} from \"./equirectangular\";\n\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n","import {asin, cos, sin} from \"../math\";\n\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n","import projection from \"./index.js\";\nimport {abs, asin, cos, epsilon2, sin, sqrt} from \"../math.js\";\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\n\nexport function equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;\n  return [\n    lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),\n    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))\n  ];\n}\n\nequalEarthRaw.invert = function(x, y) {\n  var l = y, l2 = l * l, l6 = l2 * l2 * l2;\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n  return [\n    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l),\n    asin(sin(l) / M)\n  ];\n};\n\nexport default function() {\n  return projection(equalEarthRaw)\n      .scale(177.158);\n}\n","import projection from \"./index\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n","import {default as geoStream} from \"../stream\";\nimport boundsStream from \"../path/bounds\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n","import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nexport default function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n","import clipRectangle from \"../clip/rectangle\";\nimport identity from \"../identity\";\nimport {transformer} from \"../transform\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nexport default function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity, // scale, translate and reflect\n      x0 = null, y0, x1, y1, // clip extent\n      postclip = identity,\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));\n    },\n    postclip: function(_) {\n      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    },\n    fitWidth: function(width, object) {\n      return fitWidth(projection, width, object);\n    },\n    fitHeight: function(height, object) {\n      return fitHeight(projection, height, object);\n    }\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian\";\nimport clipCircle from \"../clip/circle\";\nimport clipRectangle from \"../clip/rectangle\";\nimport compose from \"../compose\";\nimport identity from \"../identity\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math\";\nimport {rotateRadians} from \"../rotation\";\nimport {transformer} from \"../transform\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\nimport resample from \"./resample\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy) {\n  function transform(x, y) {\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k, (dy - y) / k];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, alpha) {\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [ai * x - bi * y + ci, fi - bi * x - ai * y];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, alpha).apply(null, project(lambda, phi)),\n        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math\";\nimport rotation from \"../rotation\";\nimport projection from \"./index\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n","import projection from \"./index\";\nimport {abs, epsilon} from \"../math\";\n\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n","import {asin, cos, epsilon, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n","import {cartesian} from \"../cartesian\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math\";\nimport {transformer} from \"../transform\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nexport default function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n","import {atan, exp, halfPi, log, tan} from \"../math\";\nimport {mercatorProjection} from \"./mercator\";\n\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n","import compose from \"./compose\";\nimport {abs, asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","export {default as bbox} from \"./src/bbox\";\nexport {default as feature} from \"./src/feature\";\nexport {default as mesh, meshArcs} from \"./src/mesh\";\nexport {default as merge, mergeArcs} from \"./src/merge\";\nexport {default as neighbors} from \"./src/neighbors\";\nexport {default as quantize} from \"./src/quantize\";\nexport {default as transform} from \"./src/transform\";\nexport {default as untransform} from \"./src/untransform\";\n","import transform from \"./transform\";\n\nexport default function(topology) {\n  var t = transform(topology.transform), key,\n      x0 = Infinity, y0 = x0, x1 = -x0, y1 = -x0;\n\n  function bboxPoint(p) {\n    p = t(p);\n    if (p[0] < x0) x0 = p[0];\n    if (p[0] > x1) x1 = p[0];\n    if (p[1] < y0) y0 = p[1];\n    if (p[1] > y1) y1 = p[1];\n  }\n\n  function bboxGeometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(bboxGeometry); break;\n      case \"Point\": bboxPoint(o.coordinates); break;\n      case \"MultiPoint\": o.coordinates.forEach(bboxPoint); break;\n    }\n  }\n\n  topology.arcs.forEach(function(arc) {\n    var i = -1, n = arc.length, p;\n    while (++i < n) {\n      p = t(arc[i], i);\n      if (p[0] < x0) x0 = p[0];\n      if (p[0] > x1) x1 = p[0];\n      if (p[1] < y0) y0 = p[1];\n      if (p[1] > y1) y1 = p[1];\n    }\n  });\n\n  for (key in topology.objects) {\n    bboxGeometry(topology.objects[key]);\n  }\n\n  return [x0, y0, x1, y1];\n}\n","export default function(a, x) {\n  var lo = 0, hi = a.length;\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (a[mid] < x) lo = mid + 1;\n    else hi = mid;\n  }\n  return lo;\n}\n","import reverse from \"./reverse\";\nimport transform from \"./transform\";\n\nexport default function(topology, o) {\n  return o.type === \"GeometryCollection\"\n      ? {type: \"FeatureCollection\", features: o.geometries.map(function(o) { return feature(topology, o); })}\n      : feature(topology, o);\n}\n\nexport function feature(topology, o) {\n  var id = o.id,\n      bbox = o.bbox,\n      properties = o.properties == null ? {} : o.properties,\n      geometry = object(topology, o);\n  return id == null && bbox == null ? {type: \"Feature\", properties: properties, geometry: geometry}\n      : bbox == null ? {type: \"Feature\", id: id, properties: properties, geometry: geometry}\n      : {type: \"Feature\", id: id, bbox: bbox, properties: properties, geometry: geometry};\n}\n\nexport function object(topology, o) {\n  var transformPoint = transform(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k) {\n      points.push(transformPoint(a[k], k));\n    }\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    return transformPoint(p);\n  }\n\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0]); // This should never happen per the specification.\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0]); // This may happen if an arc has only two points.\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var type = o.type, coordinates;\n    switch (type) {\n      case \"GeometryCollection\": return {type: type, geometries: o.geometries.map(geometry)};\n      case \"Point\": coordinates = point(o.coordinates); break;\n      case \"MultiPoint\": coordinates = o.coordinates.map(point); break;\n      case \"LineString\": coordinates = line(o.arcs); break;\n      case \"MultiLineString\": coordinates = o.arcs.map(line); break;\n      case \"Polygon\": coordinates = polygon(o.arcs); break;\n      case \"MultiPolygon\": coordinates = o.arcs.map(polygon); break;\n      default: return null;\n    }\n    return {type: type, coordinates: coordinates};\n  }\n\n  return geometry(o);\n}\n","export default function(x) {\n  return x;\n}\n","import {object} from \"./feature\";\nimport stitch from \"./stitch\";\n\nfunction planarRingArea(ring) {\n  var i = -1, n = ring.length, a, b = ring[n - 1], area = 0;\n  while (++i < n) a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];\n  return Math.abs(area); // Note: doubled area!\n}\n\nexport default function(topology) {\n  return object(topology, mergeArcs.apply(this, arguments));\n}\n\nexport function mergeArcs(topology, objects) {\n  var polygonsByArc = {},\n      polygons = [],\n      groups = [];\n\n  objects.forEach(geometry);\n\n  function geometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(geometry); break;\n      case \"Polygon\": extract(o.arcs); break;\n      case \"MultiPolygon\": o.arcs.forEach(extract); break;\n    }\n  }\n\n  function extract(polygon) {\n    polygon.forEach(function(ring) {\n      ring.forEach(function(arc) {\n        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n      });\n    });\n    polygons.push(polygon);\n  }\n\n  function area(ring) {\n    return planarRingArea(object(topology, {type: \"Polygon\", arcs: [ring]}).coordinates[0]);\n  }\n\n  polygons.forEach(function(polygon) {\n    if (!polygon._) {\n      var group = [],\n          neighbors = [polygon];\n      polygon._ = 1;\n      groups.push(group);\n      while (polygon = neighbors.pop()) {\n        group.push(polygon);\n        polygon.forEach(function(ring) {\n          ring.forEach(function(arc) {\n            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n              if (!polygon._) {\n                polygon._ = 1;\n                neighbors.push(polygon);\n              }\n            });\n          });\n        });\n      }\n    }\n  });\n\n  polygons.forEach(function(polygon) {\n    delete polygon._;\n  });\n\n  return {\n    type: \"MultiPolygon\",\n    arcs: groups.map(function(polygons) {\n      var arcs = [], n;\n\n      // Extract the exterior (unique) arcs.\n      polygons.forEach(function(polygon) {\n        polygon.forEach(function(ring) {\n          ring.forEach(function(arc) {\n            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n              arcs.push(arc);\n            }\n          });\n        });\n      });\n\n      // Stitch the arcs into one or more rings.\n      arcs = stitch(topology, arcs);\n\n      // If more than one ring is returned,\n      // at most one of these rings can be the exterior;\n      // choose the one with the greatest absolute area.\n      if ((n = arcs.length) > 1) {\n        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n          if ((ki = area(arcs[i])) > k) {\n            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n          }\n        }\n      }\n\n      return arcs;\n    })\n  };\n}\n","import {object} from \"./feature\";\nimport stitch from \"./stitch\";\n\nexport default function(topology) {\n  return object(topology, meshArcs.apply(this, arguments));\n}\n\nexport function meshArcs(topology, object, filter) {\n  var arcs, i, n;\n  if (arguments.length > 1) arcs = extractArcs(topology, object, filter);\n  else for (i = 0, arcs = new Array(n = topology.arcs.length); i < n; ++i) arcs[i] = i;\n  return {type: \"MultiLineString\", arcs: stitch(topology, arcs)};\n}\n\nfunction extractArcs(topology, object, filter) {\n  var arcs = [],\n      geomsByArc = [],\n      geom;\n\n  function extract0(i) {\n    var j = i < 0 ? ~i : i;\n    (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n  }\n\n  function extract1(arcs) {\n    arcs.forEach(extract0);\n  }\n\n  function extract2(arcs) {\n    arcs.forEach(extract1);\n  }\n\n  function extract3(arcs) {\n    arcs.forEach(extract2);\n  }\n\n  function geometry(o) {\n    switch (geom = o, o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(geometry); break;\n      case \"LineString\": extract1(o.arcs); break;\n      case \"MultiLineString\": case \"Polygon\": extract2(o.arcs); break;\n      case \"MultiPolygon\": extract3(o.arcs); break;\n    }\n  }\n\n  geometry(object);\n\n  geomsByArc.forEach(filter == null\n      ? function(geoms) { arcs.push(geoms[0].i); }\n      : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n\n  return arcs;\n}\n","import bisect from \"./bisect\";\n\nexport default function(objects) {\n  var indexesByArc = {}, // arc index -> array of object indexes\n      neighbors = objects.map(function() { return []; });\n\n  function line(arcs, i) {\n    arcs.forEach(function(a) {\n      if (a < 0) a = ~a;\n      var o = indexesByArc[a];\n      if (o) o.push(i);\n      else indexesByArc[a] = [i];\n    });\n  }\n\n  function polygon(arcs, i) {\n    arcs.forEach(function(arc) { line(arc, i); });\n  }\n\n  function geometry(o, i) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n    else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n  }\n\n  var geometryType = {\n    LineString: line,\n    MultiLineString: polygon,\n    Polygon: polygon,\n    MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n  };\n\n  objects.forEach(geometry);\n\n  for (var i in indexesByArc) {\n    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n      for (var k = j + 1; k < m; ++k) {\n        var ij = indexes[j], ik = indexes[k], n;\n        if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n        if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n      }\n    }\n  }\n\n  return neighbors;\n}\n","import bbox from \"./bbox\";\nimport untransform from \"./untransform\";\n\nexport default function(topology, transform) {\n  if (topology.transform) throw new Error(\"already quantized\");\n\n  if (!transform || !transform.scale) {\n    if (!((n = Math.floor(transform)) >= 2)) throw new Error(\"n must be ≥2\");\n    box = topology.bbox || bbox(topology);\n    var x0 = box[0], y0 = box[1], x1 = box[2], y1 = box[3], n;\n    transform = {scale: [x1 - x0 ? (x1 - x0) / (n - 1) : 1, y1 - y0 ? (y1 - y0) / (n - 1) : 1], translate: [x0, y0]};\n  } else {\n    box = topology.bbox;\n  }\n\n  var t = untransform(transform), box, key, inputs = topology.objects, outputs = {};\n\n  function quantizePoint(point) {\n    return t(point);\n  }\n\n  function quantizeGeometry(input) {\n    var output;\n    switch (input.type) {\n      case \"GeometryCollection\": output = {type: \"GeometryCollection\", geometries: input.geometries.map(quantizeGeometry)}; break;\n      case \"Point\": output = {type: \"Point\", coordinates: quantizePoint(input.coordinates)}; break;\n      case \"MultiPoint\": output = {type: \"MultiPoint\", coordinates: input.coordinates.map(quantizePoint)}; break;\n      default: return input;\n    }\n    if (input.id != null) output.id = input.id;\n    if (input.bbox != null) output.bbox = input.bbox;\n    if (input.properties != null) output.properties = input.properties;\n    return output;\n  }\n\n  function quantizeArc(input) {\n    var i = 0, j = 1, n = input.length, p, output = new Array(n); // pessimistic\n    output[0] = t(input[0], 0);\n    while (++i < n) if ((p = t(input[i], i))[0] || p[1]) output[j++] = p; // non-coincident points\n    if (j === 1) output[j++] = [0, 0]; // an arc must have at least two points\n    output.length = j;\n    return output;\n  }\n\n  for (key in inputs) outputs[key] = quantizeGeometry(inputs[key]);\n\n  return {\n    type: \"Topology\",\n    bbox: box,\n    transform: transform,\n    objects: outputs,\n    arcs: topology.arcs.map(quantizeArc)\n  };\n}\n","export default function(array, n) {\n  var t, j = array.length, i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n}\n","export default function(topology, arcs) {\n  var stitchedArcs = {},\n      fragmentByStart = {},\n      fragmentByEnd = {},\n      fragments = [],\n      emptyIndex = -1;\n\n  // Stitch empty arcs first, since they may be subsumed by other arcs.\n  arcs.forEach(function(i, j) {\n    var arc = topology.arcs[i < 0 ? ~i : i], t;\n    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n    }\n  });\n\n  arcs.forEach(function(i) {\n    var e = ends(i),\n        start = e[0],\n        end = e[1],\n        f, g;\n\n    if (f = fragmentByEnd[start]) {\n      delete fragmentByEnd[f.end];\n      f.push(i);\n      f.end = end;\n      if (g = fragmentByStart[end]) {\n        delete fragmentByStart[g.start];\n        var fg = g === f ? f : f.concat(g);\n        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else if (f = fragmentByStart[end]) {\n      delete fragmentByStart[f.start];\n      f.unshift(i);\n      f.start = start;\n      if (g = fragmentByEnd[start]) {\n        delete fragmentByEnd[g.end];\n        var gf = g === f ? f : g.concat(f);\n        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else {\n      f = [i];\n      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n    }\n  });\n\n  function ends(i) {\n    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n    else p1 = arc[arc.length - 1];\n    return i < 0 ? [p1, p0] : [p0, p1];\n  }\n\n  function flush(fragmentByEnd, fragmentByStart) {\n    for (var k in fragmentByEnd) {\n      var f = fragmentByEnd[k];\n      delete fragmentByStart[f.start];\n      delete f.start;\n      delete f.end;\n      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n      fragments.push(f);\n    }\n  }\n\n  flush(fragmentByEnd, fragmentByStart);\n  flush(fragmentByStart, fragmentByEnd);\n  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\n  return fragments;\n}\n","import identity from \"./identity\";\n\nexport default function(transform) {\n  if (transform == null) return identity;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(input, i) {\n    if (!i) x0 = y0 = 0;\n    var j = 2, n = input.length, output = new Array(n);\n    output[0] = (x0 += input[0]) * kx + dx;\n    output[1] = (y0 += input[1]) * ky + dy;\n    while (j < n) output[j] = input[j], ++j;\n    return output;\n  };\n}\n","import identity from \"./identity\";\n\nexport default function(transform) {\n  if (transform == null) return identity;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(input, i) {\n    if (!i) x0 = y0 = 0;\n    var j = 2,\n        n = input.length,\n        output = new Array(n),\n        x1 = Math.round((input[0] - dx) / kx),\n        y1 = Math.round((input[1] - dy) / ky);\n    output[0] = x1 - x0, x0 = x1;\n    output[1] = y1 - y0, y0 = y1;\n    while (j < n) output[j] = input[j], ++j;\n    return output;\n  };\n}\n","import TileConversion from './TileConversion';\nimport TileLayer from './TileLayer';\nimport MapState from './MapState';\nimport { defaultMapOptions } from './defaultOptions';\n\nexport default class Map {\n\n  constructor(canvas, options) {\n    if (!canvas || !canvas.getContext) {\n      throw new Error('Could not get canvas context');\n    }\n\n    this.canvas = canvas;\n    this.context = this.canvas.getContext('2d');\n\n    this.options = Object.assign({}, defaultMapOptions, options);\n\n    this.initializeState();\n    this.attachEvents();\n    this.applyStyles();\n\n    this.lastDrawState = null;\n\n    this.draw = this.draw.bind(this);\n    window.requestAnimationFrame(this.draw);\n  }\n\n  initializeState() {\n    this.state = {\n      canvasDimensions: [this.canvas.width, this.canvas.height],\n      tiles: {},\n      moveOffset: [0, 0],\n      targetMoveOffset: [0, 0],\n      targetMoveOffsetIsCoord: false,\n      moveAnimationStart: null,\n      dragStartPosition: null,\n      lastEventActionTime: null,\n      startZoom: this.options.zoom,\n      targetZoom: this.options.zoom,\n      zoomAnimationStart: null,\n      scale: 1,\n      lastMouseMoveEvent: null,\n      mouseVelocities: [],\n      markers: [],\n      polygons: [],\n      tileLayers: [\n        new TileLayer(this)\n      ]\n    };\n  }\n\n  getZoom() {\n    return this.options.zoom;\n  }\n\n  setZoom(zoom) {\n    if (this.zoomValueIsValid(zoom)) {\n      this.state.tileLayers.push(new TileLayer(this, zoom));\n      // this.state.tileLayers[0].tilesZoomLevel = this.options.zoom;\n\n      this.state.lastEventActionTime = window.performance.now();\n      this.state.zoomAnimationStart = window.performance.now();\n      this.state.targetZoom = zoom;\n      this.state.startZoom = this.options.zoom;\n    }\n  }\n\n  setCenter(coord) {\n    if (!Array.isArray(coord) || coord.length !== 2) {\n      throw new Error('Please provide a valid array with a lat/lon');\n    }\n\n    coord = coord.map(coord => parseFloat(coord));\n\n    this.state.moveAnimationStart = window.performance.now();\n    this.state.targetMoveOffset = coord;\n    this.state.targetMoveOffsetIsCoord = true;\n  }\n\n  setTargetMoveOffset(x, y, animated = true) {\n    if (animated) {\n      this.state.moveAnimationStart = window.performance.now();\n\n      this.state.targetMoveOffset = TileConversion.pixelToLatLon(\n        [x, y],\n        this.options.center,\n        this.options.zoom,\n        this.options.tileSize\n      );\n\n      this.state.targetMoveOffsetIsCoord = true;\n    } else {\n      this.state.targetMoveOffset = [x, y];\n      this.state.targetMoveOffsetIsCoord = false;\n\n      this.state.moveOffset = this.state.targetMoveOffset;\n    }\n  }\n\n  zoomValueIsValid(zoom) {\n    return zoom >= 1 && zoom <= 18;\n  }\n\n  isReadyForEvent() {\n    if (!this.state.lastEventActionTime) {\n      return true;\n    }\n\n    const now = window.performance.now();\n    const milliSecondsSinceLastEvent = now - this.state.lastEventActionTime;\n\n    return milliSecondsSinceLastEvent > this.options.debounceIntervalMs;\n  }\n\n  calculateVelocity(position1, position2, time1, time2) {\n    return ((position1 - position2) / (time1 - time2)) * 1000;\n  }\n\n  attachEvents() {\n    this.canvas.addEventListener('wheel', event => {\n      event.preventDefault();\n\n      if (this.isReadyForEvent()) {\n        if (event.deltaY > 5) {\n          this.setZoom(this.options.zoom - 1);\n        } else if (event.deltaY < -5) {\n          this.setZoom(this.options.zoom + 1);\n        }\n      }\n    });\n\n    this.canvas.addEventListener('dblclick', event => {\n      event.preventDefault();\n\n      const centerX = this.state.canvasDimensions[0] / 2;\n      const centerY = this.state.canvasDimensions[1] / 2;\n\n      this.setTargetMoveOffset(\n        -(event.clientX - centerX),\n        -(event.clientY - centerY)\n      );\n\n      this.setZoom(this.options.zoom + 1);\n    });\n\n    this.canvas.addEventListener('mousedown', event => {\n      event.preventDefault();\n\n      this.state.mouseVelocities = [];\n\n      this.state.dragStartPosition = [\n        event.clientX - this.state.moveOffset[0],\n        event.clientY - this.state.moveOffset[1]\n      ];\n    });\n\n    this.canvas.addEventListener('mouseup', event => {\n      event.preventDefault();\n\n      const x = -(this.state.dragStartPosition[0] - event.clientX);\n      const y = -(this.state.dragStartPosition[1] - event.clientY);\n\n      if (this.state.moveOffset[0] !== 0 || this.state.moveOffset[1] !== 0) {\n        const now = window.performance.now();\n        const timingThreshold = now - this.options.throwTimingThresholdMs;\n\n        const thresholdsToConsider = this.state.mouseVelocities\n          .filter(threshold => threshold[0] > timingThreshold)\n          .map(threshold => threshold[1]);\n\n        const velocitySum = thresholdsToConsider.reduce(\n          (accumulator, velocity) => accumulator + velocity,\n          0\n        );\n\n        const averageVelocity = velocitySum / thresholdsToConsider.length;\n\n        if (averageVelocity >= this.options.throwVelocityThreshold) {\n          let multiplier = averageVelocity / this.options.throwVelocityThreshold\n            * this.options.panAccelerationMultiplier;\n\n          multiplier = Math.min(multiplier, this.options.maxPanAcceleration);\n\n          this.setTargetMoveOffset(\n            x * multiplier,\n            y * multiplier\n          );\n        } else {\n          this.updateCenter();\n        }\n      }\n\n      this.state.dragStartPosition = null;\n    });\n\n    this.canvas.addEventListener('mousemove', event => {\n      event.preventDefault();\n\n      if (this.state.dragStartPosition) {\n        const x = -(this.state.dragStartPosition[0] - event.clientX);\n        const y = -(this.state.dragStartPosition[1] - event.clientY);\n\n        const now = window.performance.now();\n\n        const vx = this.calculateVelocity(this.state.moveOffset[0], x, now, this.state.lastMouseMoveEvent);\n        const vy = this.calculateVelocity(this.state.moveOffset[1], y, now, this.state.lastMouseMoveEvent);\n\n        const velocity = Math.round(Math.sqrt((vx * vx) + (vy * vy)));\n\n        this.state.mouseVelocities.push([now, velocity]);\n\n        this.setTargetMoveOffset(x, y, false);\n        this.state.lastMouseMoveEvent = window.performance.now();\n      }\n\n      return false;\n    });\n  }\n\n  applyStyles() {\n    this.canvas.style.cursor = 'grab';\n  }\n\n  easeOutQuad(time) {\n    return time * (2 - time);\n  }\n\n  updateMoveOffset() {\n    const targetMoveOffsetChanged = this.state.moveOffset !== this.state.targetMoveOffset;\n\n    if (targetMoveOffsetChanged) {\n      const timestamp = window.performance.now();\n\n      const progress = Math.max(timestamp - this.state.moveAnimationStart, 0);\n      const percentage = this.easeOutQuad(progress / this.options.animationDurationMs);\n\n      let targetMoveOffset = this.state.targetMoveOffset;\n\n      if (this.state.targetMoveOffsetIsCoord) {\n        targetMoveOffset = TileConversion.latLonToPixel(\n          this.state.targetMoveOffset,\n          this.options.center,\n          this.options.zoom,\n          this.options.tileSize,\n          this.state.canvasDimensions\n        );\n      }\n\n      if (percentage >= 0.99) {\n        this.state.moveOffset = targetMoveOffset;\n      } else {\n        this.state.moveOffset = [\n          this.state.moveOffset[0] + (targetMoveOffset[0] - this.state.moveOffset[0]) * percentage,\n          this.state.moveOffset[1] + (targetMoveOffset[1] - this.state.moveOffset[1]) * percentage\n        ];\n      }\n\n      const targetHasBeenReached = this.state.moveOffset === targetMoveOffset;\n\n      if (targetHasBeenReached) {\n        this.updateCenter();\n      }\n    }\n  }\n\n  updateCenter() {\n    const latLon = TileConversion.pixelToLatLon(\n      this.state.moveOffset,\n      this.options.center,\n      this.options.zoom,\n      this.options.tileSize\n    );\n\n    this.setTargetMoveOffset(0, 0, false);\n    this.options.center = latLon;\n  }\n\n  updateZoom() {\n    if (this.options.zoom !== this.state.targetZoom) {\n      const progress = Math.max(window.performance.now() - this.state.zoomAnimationStart, 0);\n      const percentage = this.easeOutQuad(progress / this.options.animationDurationMs);\n\n      let differenceFromTarget = Math.abs(this.state.targetZoom - this.state.startZoom);\n\n      if (this.state.targetZoom <= this.state.startZoom) {\n        differenceFromTarget *= -1;\n      }\n\n      const newZoomDiff = differenceFromTarget * percentage;\n      const remainingTime = this.options.animationDurationMs - progress;\n\n      this.options.zoom = remainingTime <= 5\n        ? this.state.targetZoom\n        : (this.state.startZoom + newZoomDiff);\n\n      const roundedZoom = Math.round(this.options.zoom);\n      const diff = this.options.zoom - roundedZoom;\n\n      this.state.scale = Math.pow(2, diff);\n\n      if (this.options.zoom === this.state.targetZoom) {\n        // Mark old tile layer for deletion\n        this.state.tileLayers.shift();\n        this.state.tileLayers[0].tilesZoomLevel = null;\n\n        // this.state.tileLayers[this.state.tileLayers.length - 1].shouldBeDeleted = true;\n      }\n    } else {\n      this.state.scale = 1;\n    }\n  }\n\n  garbageCollect() {\n    const allTiles = Object.values(this.state.tiles);\n\n    if (allTiles.length > this.maxTilesToKeep()) {\n      const tileExpirationCutOff = new Date().getTime() - 5000;\n\n      const tilesToConsider = allTiles\n        .filter(tile => tile.lastRequested < tileExpirationCutOff)\n        .sort((a, b) => ~~(a.lastRequested < b.lastRequested));\n\n      const tilesToDeleteCount = this.maxTilesToKeep() - (allTiles.length - tilesToConsider.length);\n\n      tilesToConsider\n        .splice(tilesToConsider.length - tilesToDeleteCount)\n        .forEach(tile => {\n          tile.src = '';\n          delete this.state.tiles[tile.tileId];\n        });\n    }\n  }\n\n  maxTilesToKeep() {\n    return 1000;\n  }\n\n  shouldRedraw() {\n    const drawState = JSON.stringify([this.state, this.options]);\n\n    if (this.lastDrawState !== drawState) {\n      this.lastDrawState = drawState;\n\n      return true;\n    }\n\n    return false;\n  }\n\n  draw() {\n    this.updateMoveOffset();\n    this.updateZoom();\n    this.state.tileLayers.forEach(tileLayer => tileLayer.calculateGrid());\n    this.garbageCollect();\n\n    if (this.shouldRedraw()) {\n      // Delete tile layers that are ready for deletion and mostly loaded\n      /*\n      this.state.tileLayers = this.state.tileLayers\n        .filter(tileLayer => !(tileLayer.shouldBeDeleted && tileLayer.loadedPercentage() >= 0.9));\n\n      console.log(this.state.tileLayers.length);\n      */\n\n      if (this.state.tileLayers.length > 0) {\n        // Only draw the top layer\n        this.state.tileLayers[0].drawTiles(this.state.scale);\n      }\n\n      this.drawMarkers();\n      this.drawPolygons();\n      this.drawAttribution();\n    }\n\n    window.requestAnimationFrame(this.draw);\n  }\n\n  getMapBounds() {\n    const nw = TileConversion.pixelToLatLon(\n      [this.state.canvasDimensions[0] / 2, (this.state.canvasDimensions[1] / 2)],\n      this.options.center,\n      this.options.zoom,\n      this.options.tileSize\n    );\n\n    const se = TileConversion.pixelToLatLon(\n      [-this.state.canvasDimensions[0] / 2, -(this.state.canvasDimensions[1] / 2)],\n      this.options.center,\n      this.options.zoom,\n      this.options.tileSize\n    );\n\n    return {\n      nw, se\n    };\n  }\n\n  drawMarkers() {\n    const bounds = this.getMapBounds();\n\n    const visibleMarkers = this.state.markers.filter(marker => {\n      return marker.coords[0] <= bounds.nw[0] && marker.coords[0] >= bounds.se[0]\n        && marker.coords[1] >= bounds.nw[1] && marker.coords[1] <= bounds.se[1];\n    });\n\n    const center = [\n      this.state.canvasDimensions[0] / 2,\n      this.state.canvasDimensions[1] / 2\n    ];\n\n    visibleMarkers.map(marker => {\n      const position = TileConversion.latLonToPixel(\n        marker.coords,\n        this.options.center,\n        this.options.zoom,\n        this.options.tileSize,\n        this.state.canvasDimensions\n      );\n\n      marker.render(this.context, [\n        center[0] - position[0] + this.state.moveOffset[0],\n        center[1] - position[1] + this.state.moveOffset[1]\n      ]);\n    });\n  }\n\n  drawPolygons() {\n    const mapState = new MapState(\n      this.options.center,\n      this.options.zoom,\n      this.options.tileSize,\n      this.state.canvasDimensions,\n      this.state.moveOffset\n    );\n\n    this.state.polygons.map(polygon => {\n      polygon.render(this.context, mapState);\n    });\n  }\n\n  drawAttribution() {\n    const margin = 4;\n\n    this.context.font = 'bold 12px sans-serif';\n    const textBounds = this.context.measureText(this.options.attribution);\n\n    const x = this.state.canvasDimensions[0] - textBounds.width - margin;\n    const y = this.state.canvasDimensions[1] - 2 - margin;\n\n    this.context.fillStyle = 'rgba(255, 255, 255, 0.7)';\n    this.roundedRectangle(x - margin, y - 15, textBounds.width + 80, 80);\n\n    this.context.fillStyle = 'rgba(0, 0, 0, 0.7)';\n    this.context.fillText(this.options.attribution, x, y);\n\n  }\n\n  roundedRectangle(x, y, width, height) {\n    const radius = 5;\n\n    this.context.beginPath();\n    this.context.moveTo(x + radius, y);\n    this.context.lineTo(x + width - radius, y);\n    this.context.quadraticCurveTo(x + width, y, x + width, y + radius);\n    this.context.lineTo(x + width, y + height - radius);\n    this.context.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    this.context.lineTo(x + radius, y + height);\n    this.context.quadraticCurveTo(x, y + height, x, y + height - radius);\n    this.context.lineTo(x, y + radius);\n    this.context.quadraticCurveTo(x, y, x + radius, y);\n    this.context.closePath();\n\n    this.context.fill();\n  }\n\n  addMarker(marker) {\n    this.state.markers.push(marker);\n  }\n\n  addMarkers(markers) {\n    markers.map(marker => this.addMarker(marker));\n  }\n\n  addPolygon(polygon) {\n    this.state.polygons.push(polygon);\n  }\n\n}\n","export default class MapState {\n  constructor(center, zoom, tileSize, canvasDimensions, moveOffset) {\n    this._center = center;\n    this._zoom = zoom;\n    this._tileSize = tileSize;\n    this._canvasDimensions = canvasDimensions;\n    this._moveOffset = moveOffset;\n  }\n\n  get center() {\n    return this._center;\n  }\n\n  get zoom() {\n    return this._zoom;\n  }\n\n  get tileSize() {\n    return this._tileSize;\n  }\n\n  get canvasDimensions() {\n    return this._canvasDimensions;\n  }\n\n  get moveOffset() {\n    return this._moveOffset;\n  }\n}\n","import { defaultMarkerOptions } from './defaultOptions';\n\nexport default class Marker {\n  constructor(coords, options = {}) {\n    this._coords = coords;\n    this._options = Object.assign({}, defaultMarkerOptions, options);\n  }\n\n  get coords() {\n    return this._coords;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  render(context, position) {\n    let renderFunction = null;\n\n    switch (this.options.type) {\n      case 'marker':\n        renderFunction = this.renderMarker;\n        break;\n\n      case 'circle':\n        renderFunction = this.renderCircle;\n        break;\n\n      case 'donut':\n        renderFunction = this.renderDonut;\n        break;\n    }\n\n    if (!renderFunction) {\n      throw new Error(`Unsupported marker type: \"${this.options.type}\"`);\n    } else {\n      context.fillStyle = this.options.color;\n      context.strokeStyle = this.options.color;\n\n      renderFunction = renderFunction.bind(this);\n      renderFunction(context, position);\n    }\n  }\n\n  renderCircle(context, position) {\n    context.save();\n    context.beginPath();\n    context.arc(position[0], position[1], 5, 0, 2 * Math.PI);\n    context.fill();\n    context.restore();\n  }\n\n  renderDonut(context, position) {\n    context.save();\n    context.beginPath();\n    context.lineWidth = 5;\n    context.arc(position[0], position[1], 7, 0, 2 * Math.PI);\n    context.stroke();\n    context.restore();\n  }\n\n  renderMarker(context, position) {\n    const markerWidth = 17.698069;\n    const markerHeight = 24.786272;\n\n    const x = position[0] - markerWidth / 2;\n    const y = position[1] - markerHeight;\n\n    context.save();\n    context.transform(0.184386, 0.000000, 0.000000, 0.184386, 0.551658 + x, 4.095760 + y);\n    context.beginPath();\n    context.lineWidth = 1.667195;\n    context.moveTo(45.000000, -22.212949);\n    context.bezierCurveTo(18.494941, -22.212949, -2.991863, -0.726145, -2.991863, 25.778914);\n    context.bezierCurveTo(-2.991863, 52.282306, 45.000000, 112.212950, 45.000000, 112.212950);\n    context.bezierCurveTo(45.000000, 112.212950, 92.991863, 52.282306, 92.991863, 25.777247);\n    context.bezierCurveTo(92.991863, -0.726145, 71.505059, -22.212949, 45.000000, -22.212949);\n    context.moveTo(45.000000, 43.827962);\n    context.bezierCurveTo(33.553042, 43.827962, 24.273437, 34.550024, 24.273437, 23.103067);\n    context.bezierCurveTo(24.273437, 11.656109, 33.553042, 2.376504, 45.000000, 2.376504);\n    context.bezierCurveTo(56.446958, 2.376504, 65.726563, 11.654442, 65.726563, 23.101399);\n    context.bezierCurveTo(65.726563, 34.548357, 56.446958, 43.827962, 45.000000, 43.827962);\n    context.fill();\n    context.restore();\n  }\n}\n","import { defaultPolygonOptions } from './defaultOptions';\nimport TileConversion from './TileConversion';\nimport { geoPath, geoTransform } from 'd3-geo';\nimport { mesh } from 'topojson-client';\n\nconst POLYGON_CACHE = {};\n\nexport default class Polygon {\n  constructor(sourceUrl, options = {}) {\n    this._sourceUrl = sourceUrl;\n    this._options = Object.assign({}, defaultPolygonOptions, options);\n    this._geometry = null;\n\n    fetch(this._sourceUrl)\n      .then(response => response.json())\n      .then(json => {\n        this._geometry = json;\n      })\n      .catch(err => console.log(`Could not load ${this._sourceUrl}: ${err.message || err}`));\n  }\n\n  get sourceUrl() {\n    return this._sourceUrl;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  render(context, mapState) {\n    if (!this._geometry) {\n      return;\n    }\n\n    context.fillStyle = this.options.color;\n    context.strokeStyle = this.options.color;\n\n    this.mapState = mapState;\n\n    const center = [\n      this.mapState.canvasDimensions[0] / 2,\n      this.mapState.canvasDimensions[1] / 2\n    ];\n\n    const transform = geoTransform({point: this.projectPoint, mapState, center });\n\n    const path = geoPath(transform).context(context);\n\n    context.beginPath();\n    path(mesh(this._geometry));\n    context.stroke();\n  }\n\n  projectPoint(x, y) {\n    const cachedPosition = (x, y, mapState) => {\n      const cacheKey = JSON.stringify([\n        [y, x], this.mapState.center, this.mapState.zoom,\n        this.mapState.tileSize, this.mapState.canvasDimensions\n      ]);\n\n      if (cacheKey in POLYGON_CACHE) {\n        return POLYGON_CACHE[cacheKey];\n      }\n\n      const position = TileConversion.latLonToPixel(\n        [y, x],\n        this.mapState.center,\n        this.mapState.zoom,\n        this.mapState.tileSize,\n        this.mapState.canvasDimensions\n      );\n\n      POLYGON_CACHE[cacheKey] = position;\n\n      return position;\n    };\n\n    const position = cachedPosition(x, y, this.mapState);\n\n    const projectedX = this.center[0] - position[0] + this.mapState.moveOffset[0];\n    const projectedY = this.center[1] - position[1] + this.mapState.moveOffset[1];\n\n    this.stream.point(projectedX, projectedY);\n  }\n}\n","export default class Tile {\n  constructor(x, y, zoom) {\n    this._x = x;\n    this._y = y;\n    this._zoom = zoom;\n  }\n\n  get x() {\n    return this._x;\n  }\n\n  get y() {\n    return this._y;\n  }\n\n  get zoom() {\n    return this._zoom;\n  }\n\n  get id() {\n    return [this.x, this.y, this.zoom].join('|');\n  }\n}\n","// Based on https://wiki.openstreetmap.org/wiki/Slippy_map_tilenames#ECMAScript_.28JavaScript.2FActionScript.2C_etc..29\nexport default class TileConversion {\n  static lon2tile(lon, zoom, rounded = true) {\n    const tile = (lon + 180) / 360 * Math.pow(2, zoom);\n\n    return rounded\n      ? Math.floor(tile)\n      : tile;\n  }\n\n  static lat2tile(lat, zoom, rounded = true) {\n    const tile = (1 - Math.log(Math.tan(lat * Math.PI / 180) + 1 / Math.cos(lat * Math.PI / 180))\n      / Math.PI) / 2 * Math.pow(2, zoom);\n\n    return rounded\n      ? Math.floor(tile)\n      : tile;\n  }\n\n  static tile2lon(x, z) {\n    return x / Math.pow(2, z) * 360 - 180;\n  }\n\n  static tile2lat(y, z) {\n    const n = Math.PI - 2 * Math.PI * y / Math.pow(2, z);\n\n    return 180 / Math.PI * Math.atan(0.5 * (Math.exp(n) - Math.exp(-n)));\n  }\n\n  static tile2boundingBox(x, y, zoom) {\n    return {\n      ne: [\n        TileConversion.tile2lat(y, zoom),\n        TileConversion.tile2lon(x + 1, zoom)\n      ],\n\n      sw: [\n        TileConversion.tile2lat(y + 1, zoom),\n        TileConversion.tile2lon(x, zoom)\n      ]\n    };\n  }\n\n  static pixelToLatLon(pixel, center, zoom, tileSize) {\n    const pointDiff = [\n      pixel[0] / tileSize,\n      pixel[1] / tileSize\n    ];\n\n    const tileX = TileConversion.lon2tile(center[1], zoom, false) - pointDiff[0];\n    const tileY = TileConversion.lat2tile(center[0], zoom, false) - pointDiff[1];\n\n    return [\n      TileConversion.tile2lat(tileY, zoom),\n      TileConversion.tile2lon(tileX, zoom)\n    ];\n  }\n\n  static latLonToPixel(coord, center, zoom, tileSize, mapDimensions) {\n    const tileX = TileConversion.lon2tile(coord[1], zoom, false);\n    const tileY = TileConversion.lat2tile(coord[0], zoom, false);\n\n    const tileCenterX = TileConversion.lon2tile(center[1], zoom, false);\n    const tileCenterY = TileConversion.lat2tile(center[0], zoom, false);\n\n    return [\n      -(tileX - tileCenterX) * tileSize,\n      -(tileY - tileCenterY) * tileSize\n    ];\n  }\n}\n","import TileConversion from './TileConversion';\nimport Tile from './Tile';\n\nexport default class TileLayer {\n\n  constructor(map, tilesZoomLevel = null) {\n    this.map = map;\n    this.tilesZoomLevel = tilesZoomLevel;\n    this.shouldBeDeleted = false;\n\n    this.context = map.context;\n\n    this.state = {\n      grid: [],\n      gridHash: null,\n      relativeTileOffset: [0, 0]\n    };\n  }\n\n  toJSON() {\n    return [\n      this.state,\n      this.loadedPercentage() // We want a change in loaded tiles to possibly trigger a redraw\n    ];\n  }\n\n  getTilesCount(canvasSize) {\n    let tilesCount = Math.ceil(canvasSize / this.map.options.tileSize) * this.map.options.tileAreaMultiplier;\n\n    if (tilesCount % 2 === 0) {\n      tilesCount++;\n    }\n\n    return tilesCount;\n  }\n\n  calculateGrid() {\n    const { state, options } = this.map;\n\n    const centerY = TileConversion.lat2tile(options.center[0], Math.round(this.tilesZoomLevel || options.zoom), false);\n    const centerX = TileConversion.lon2tile(options.center[1], Math.round(this.tilesZoomLevel || options.zoom), false);\n    const gridHash = [centerY, centerX].join(',');\n\n    const gridNeedsToBeUpdated = this.state.gridHash !== gridHash;\n\n    if (!gridNeedsToBeUpdated) {\n      return;\n    }\n\n    const horizontalTiles = this.getTilesCount(state.canvasDimensions[0]);\n    const verticalTiles = this.getTilesCount(state.canvasDimensions[1]);\n\n    // noinspection JSSuspiciousNameCombination\n    const centerYRounded = Math.floor(centerY);\n    const centerXRounded = Math.floor(centerX);\n\n    this.state.relativeTileOffset = [\n      Math.abs(centerX - centerXRounded),\n      Math.abs(centerY - centerYRounded)\n    ];\n\n    const startX = centerXRounded - Math.floor(horizontalTiles / 2);\n    const startY = centerYRounded - Math.floor(verticalTiles / 2);\n\n    let grid = [];\n\n    for (let y = 0; y < verticalTiles; y++) {\n      for (let x = 0; x < horizontalTiles; x++) {\n        if (!grid[x]) {\n          grid[x] = [];\n        }\n\n        const tileX = startX + x;\n        const tileY = startY + y;\n\n        if (tileX >= 0 && tileY >= 0) {\n          grid[x][y] = new Tile(tileX, tileY, Math.round(this.tilesZoomLevel || options.zoom));\n          this.ensureTileAsset(grid[x][y]);\n        }\n      }\n    }\n\n    this.state.grid = grid;\n    this.state.gridHash = gridHash;\n  }\n\n  ensureTileAsset(tile) {\n    if (!(tile.id in this.map.state.tiles)) {\n      const tileUrl = this.map.options.source(Math.floor(tile.x), Math.floor(tile.y), tile.zoom);\n\n      this.map.state.tiles[tile.id] = new Image();\n      this.map.state.tiles[tile.id].tileId = tile.id;\n      this.map.state.tiles[tile.id].src = tileUrl;\n      this.map.state.tiles[tile.id].loaded = false;\n      this.map.state.tiles[tile.id].onload = () => {\n        this.map.state.tiles[tile.id].loaded = true;\n      };\n    }\n\n    this.map.state.tiles[tile.id].lastRequested = new Date().getTime();\n  }\n\n  drawTiles(scale) {\n    const canvasWidth = this.map.state.canvasDimensions[0];\n    const canvasHeight = this.map.state.canvasDimensions[1];\n\n    const tileSize = this.map.options.tileSize * scale;\n\n    const centerOffset = [\n      tileSize / 2 - (this.state.relativeTileOffset[0] * tileSize),\n      tileSize / 2 - (this.state.relativeTileOffset[1] * tileSize)\n    ];\n\n    this.context.fillStyle = '#EEE';\n    this.context.fillRect(0, 0, canvasWidth, canvasHeight);\n\n    const horizontalTiles = this.getTilesCount(canvasWidth);\n    const verticalTiles = this.getTilesCount(canvasHeight);\n\n    const horizontalOverflow = (horizontalTiles * tileSize) - canvasWidth;\n    const verticalOverflow = (verticalTiles * tileSize) - canvasHeight;\n\n    for (let y = 0; y < verticalTiles; y++) {\n      for (let x = 0; x < horizontalTiles; x++) {\n        const tile = this.state.grid[x][y];\n\n        if (tile) {\n          const tileX = this.map.state.moveOffset[0] + centerOffset[0]\n            + (x * tileSize - horizontalOverflow / 2);\n\n          const tileY = this.map.state.moveOffset[1] + centerOffset[1]\n            + (y * tileSize - verticalOverflow / 2);\n\n          try {\n            if (this.map.state.tiles[tile.id].loaded) {\n              this.context.drawImage(this.map.state.tiles[tile.id], tileX, tileY, tileSize, tileSize);\n            } else {\n              this.drawGenericBackground(tileX, tileY, tileSize);\n            }\n          } catch (err) {\n            this.drawGenericBackground(tileX, tileY, tileSize);\n          }\n\n          if (this.map.options.debug) {\n            this.context.strokeStyle = 'green';\n            this.context.strokeRect(tileX, tileY, tileSize, tileSize);\n          }\n        }\n      }\n    }\n\n    if (this.map.options.debug) {\n      this.context.fillStyle = 'rgba(200, 0, 0, 0.7)';\n      this.context.beginPath();\n      this.context.arc(canvasWidth / 2, canvasHeight / 2, 5, 0, 2 * Math.PI);\n      this.context.fill();\n    }\n  }\n\n  drawGenericBackground(x, y, size) {\n    const increment = size / 8;\n\n    this.context.beginPath();\n    for (let lineX = increment; lineX < size; lineX += increment) {\n      for (let lineY = increment; lineY < size; lineY += increment) {\n        this.context.moveTo(x, y + lineY);\n        this.context.lineTo(x + size, y + lineY);\n\n        this.context.moveTo(x + lineX, y);\n        this.context.lineTo(x + lineX, y + size);\n      }\n    }\n    this.context.strokeStyle = '#DDD';\n    this.context.stroke();\n\n    this.context.strokeStyle = '#CCC';\n    this.context.strokeRect(x, y, size, size);\n  }\n\n  loadedPercentage() {\n    const horizontalTiles = this.getTilesCount(this.map.state.canvasDimensions[0]);\n    const verticalTiles = this.getTilesCount(this.map.state.canvasDimensions[1]);\n\n    const totalTiles = horizontalTiles * verticalTiles;\n    let loadedTiles = 0;\n\n    for (let y = 0; y < verticalTiles; y++) {\n      for (let x = 0; x < horizontalTiles; x++) {\n        const tile = this.state.grid[x][y];\n\n        if (this.map.state.tiles[tile.id].loaded) {\n          loadedTiles++;\n        }\n      }\n    }\n\n    return loadedTiles / totalTiles;\n  }\n}\n","export const defaultMapOptions = {\n  /**\n   * Common options\n   */\n  source: (x, y, z) => `https://maps.geocod.io/tiles/base/${z}/${x}/${y}.png`,\n  zoom: 12,\n  center: [38.841779, -77.088312],\n  attribution: '© OpenStreetMap contributors',\n\n  /**\n   * Width and height in pixels for each tile, you most likely do not want to change this.\n   */\n  tileSize: 256,\n\n  /**\n   * Determines the distance travelled when panning the map, the higher the value the further the\n   * distance\n   */\n  panAccelerationMultiplier: 2,\n\n  /**\n   * The maximum acceleration constant for when the map is thrown. This is in place to avoid\n   * super-sonic acceleration speeds :)\n   */\n  maxPanAcceleration: 3.5,\n\n  /**\n   * Only consider high velocity mouse movements that has been performed within this timing\n   * threshold (in milliseconds)\n   */\n  throwTimingThresholdMs: 100,\n\n  /**\n   * If the mouse panning velocity is above this threshold, it is considering a throw rather than\n   * a regular pan. We use this to pan further when the mouse is moved quickly\n   */\n  throwVelocityThreshold: 3000,\n\n  /**\n   * How quickly panning and zooming animations are executed (in milliseconds)\n   */\n  animationDurationMs: 300,\n\n  /*\n   * Used for debouncing events such as scrolling\n   */\n  debounceIntervalMs: 200,\n\n  /**\n   * Determines how many additional tiles that should be loaded, to decrease map load times when\n   * panning the map around\n\n   * Minimum value: 1.25\n   */\n  tileAreaMultiplier: 2,\n\n  /**\n   * When debug mode is enabled, additional rendering artifacts are drawn. Should only be used in\n   * conjuction with development of the library\n   */\n  debug: false\n};\n\nexport const defaultMarkerOptions = {\n  /**\n   * What color should the marker be?\n   * Supports hex, rgb and rgba values\n   */\n  color: 'rgba(0, 0, 200, 0.7)',\n\n  /**\n   * Valid values: marker, circle, donut\n   */\n  type: 'marker'\n};\n\nexport const defaultPolygonOptions = {\n  /**\n   * What color should the polygon be?\n   * Supports hex, rgb and rgba values\n   */\n  color: 'rgba(0, 0, 200, 0.7)'\n};\n","import Map from './Map';\nimport Marker from './Marker';\nimport Polygon from './Polygon';\n\nexport default {\n  Map,\n  Marker,\n  Polygon\n};\n"],"sourceRoot":""}