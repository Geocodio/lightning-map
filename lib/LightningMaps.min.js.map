{"version":3,"sources":["webpack://LightningMaps/webpack/universalModuleDefinition","webpack://LightningMaps/webpack/bootstrap","webpack://LightningMaps/./src/TileConversion.js","webpack://LightningMaps/./src/defaultOptions.js","webpack://LightningMaps/./src/index.js","webpack://LightningMaps/./src/Map.js","webpack://LightningMaps/./src/TileLayer.js","webpack://LightningMaps/./src/Tile.js","webpack://LightningMaps/./src/Marker.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","TileConversion","lon","zoom","rounded","arguments","length","undefined","tile","Math","pow","floor","lat","log","tan","PI","cos","x","z","y","atan","exp","ne","tile2lat","tile2lon","sw","pixel","center","tileSize","pointDiff","tileX","lon2tile","tileY","lat2tile","coord","mapDimensions","source","concat","panAccelerationMultiplier","maxPanAcceleration","throwTimingThresholdMs","throwVelocityThreshold","animationDurationMs","debounceIntervalMs","tileAreaMultiplier","debug","color","type","_Map","_interopRequireDefault","_Marker","Map","default","Marker","_TileConversion","_TileLayer","_defaultOptions","canvas","options","_classCallCheck","this","getContext","Error","context","assign","defaultMapOptions","initializeState","attachEvents","applyStyles","lastDrawState","draw","requestAnimationFrame","state","canvasDimensions","width","height","tiles","moveOffset","targetMoveOffset","targetMoveOffsetIsCoord","moveAnimationStart","dragStartPosition","lastEventActionTime","startZoom","targetZoom","zoomAnimationStart","scale","lastMouseMoveEvent","mouseVelocities","markers","tileLayers","zoomValueIsValid","push","performance","now","Array","isArray","map","parseFloat","pixelToLatLon","position1","position2","time1","time2","_this","addEventListener","event","preventDefault","isReadyForEvent","deltaY","setZoom","centerX","centerY","setTargetMoveOffset","clientX","clientY","timingThreshold","thresholdsToConsider","filter","threshold","averageVelocity","reduce","accumulator","velocity","multiplier","min","updateCenter","vx","calculateVelocity","vy","round","sqrt","style","cursor","time","timestamp","progress","max","percentage","easeOutQuad","latLonToPixel","latLon","differenceFromTarget","abs","newZoomDiff","remainingTime","roundedZoom","diff","shift","tilesZoomLevel","_this2","allTiles","values","maxTilesToKeep","tileExpirationCutOff","Date","getTime","tilesToConsider","lastRequested","sort","a","b","tilesToDeleteCount","splice","forEach","src","tileId","drawState","JSON","stringify","updateMoveOffset","updateZoom","tileLayer","calculateGrid","garbageCollect","shouldRedraw","drawTiles","drawMarkers","nw","se","_this3","bounds","getMapBounds","visibleMarkers","marker","coords","position","render","_Tile","TileLayer","shouldBeDeleted","grid","gridHash","relativeTileOffset","loadedPercentage","canvasSize","tilesCount","ceil","_this$map","join","horizontalTiles","getTilesCount","verticalTiles","centerYRounded","centerXRounded","startX","startY","ensureTileAsset","id","tileUrl","Image","loaded","onload","canvasWidth","canvasHeight","centerOffset","fillStyle","fillRect","horizontalOverflow","verticalOverflow","drawImage","drawGenericBackground","err","strokeStyle","strokeRect","beginPath","arc","fill","size","increment","lineX","lineY","moveTo","lineTo","stroke","totalTiles","loadedTiles","Tile","_x","_y","_zoom","_coords","_options","defaultMarkerOptions","renderFunction","renderMarker","renderCircle","renderDonut","save","restore","lineWidth","markerWidth","transform","bezierCurveTo"],"mappings":"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","file":"LightningMaps.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"LightningMaps\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"LightningMaps\"] = factory();\n\telse\n\t\troot[\"LightningMaps\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","// Based on https://wiki.openstreetmap.org/wiki/Slippy_map_tilenames#ECMAScript_.28JavaScript.2FActionScript.2C_etc..29\nexport default class TileConversion {\n  static lon2tile(lon, zoom, rounded = true) {\n    const tile = (lon + 180) / 360 * Math.pow(2, zoom);\n\n    return rounded\n      ? Math.floor(tile)\n      : tile;\n  }\n\n  static lat2tile(lat, zoom, rounded = true) {\n    const tile = (1 - Math.log(Math.tan(lat * Math.PI / 180) + 1 / Math.cos(lat * Math.PI / 180))\n      / Math.PI) / 2 * Math.pow(2, zoom);\n\n    return rounded\n      ? Math.floor(tile)\n      : tile;\n  }\n\n  static tile2lon(x, z) {\n    return x / Math.pow(2, z) * 360 - 180;\n  }\n\n  static tile2lat(y, z) {\n    const n = Math.PI - 2 * Math.PI * y / Math.pow(2, z);\n\n    return 180 / Math.PI * Math.atan(0.5 * (Math.exp(n) - Math.exp(-n)));\n  }\n\n  static tile2boundingBox(x, y, zoom) {\n    return {\n      ne: [\n        TileConversion.tile2lat(y, zoom),\n        TileConversion.tile2lon(x + 1, zoom)\n      ],\n\n      sw: [\n        TileConversion.tile2lat(y + 1, zoom),\n        TileConversion.tile2lon(x, zoom)\n      ]\n    };\n  }\n\n  static pixelToLatLon(pixel, center, zoom, tileSize) {\n    const pointDiff = [\n      pixel[0] / tileSize,\n      pixel[1] / tileSize\n    ];\n\n    const tileX = TileConversion.lon2tile(center[1], zoom, false) - pointDiff[0];\n    const tileY = TileConversion.lat2tile(center[0], zoom, false) - pointDiff[1];\n\n    return [\n      TileConversion.tile2lat(tileY, zoom),\n      TileConversion.tile2lon(tileX, zoom)\n    ];\n  }\n\n  static latLonToPixel(coord, center, zoom, tileSize, mapDimensions) {\n    const tileX = TileConversion.lon2tile(coord[1], zoom, false);\n    const tileY = TileConversion.lat2tile(coord[0], zoom, false);\n\n    const tileCenterX = TileConversion.lon2tile(center[1], zoom, false);\n    const tileCenterY = TileConversion.lat2tile(center[0], zoom, false);\n\n    return [\n      -(tileX - tileCenterX) * tileSize,\n      -(tileY - tileCenterY) * tileSize\n    ];\n  }\n}\n","export const defaultMapOptions = {\n  /**\n   * Common options\n   */\n  source: (x, y, z) => `https://maps.geocod.io/tiles/base/${z}/${x}/${y}.png`,\n  zoom: 12,\n  center: [38.841779, -77.088312],\n\n  /**\n   * Width and height in pixels for each tile, you most likely do not want to change this.\n   */\n  tileSize: 256,\n\n  /**\n   * Determines the distance travelled when panning the map, the higher the value the further the\n   * distance\n   */\n  panAccelerationMultiplier: 2,\n\n  /**\n   * The maximum acceleration constant for when the map is thrown. This is in place to avoid\n   * super-sonic acceleration speeds :)\n   */\n  maxPanAcceleration: 3.5,\n\n  /**\n   * Only consider high velocity mouse movements that has been performed within this timing\n   * threshold (in milliseconds)\n   */\n  throwTimingThresholdMs: 100,\n\n  /**\n   * If the mouse panning velocity is above this threshold, it is considering a throw rather than\n   * a regular pan. We use this to pan further when the mouse is moved quickly\n   */\n  throwVelocityThreshold: 3000,\n\n  /**\n   * How quickly panning and zooming animations are executed (in milliseconds)\n   */\n  animationDurationMs: 300,\n\n  /*\n   * Used for debouncing events such as scrolling\n   */\n  debounceIntervalMs: 200,\n\n  /**\n   * Determines how many additional tiles that should be loaded, to decrease map load times when\n   * panning the map around\n\n   * Minimum value: 1.25\n   */\n  tileAreaMultiplier: 2,\n\n  /**\n   * When debug mode is enabled, additional rendering artifacts are drawn. Should only be used in\n   * conjuction with development of the library\n   */\n  debug: false\n};\n\nexport const defaultMarkerOptions = {\n  /**\n   * What color should the marker be?\n   * Supports hex, rgb and rgba values\n   */\n  color: 'rgba(0, 0, 200, 0.7)',\n\n  /**\n   * Valid values: marker, circle, donut\n   */\n  type: 'marker'\n};\n","import Map from './Map';\nimport Marker from './Marker';\n\nexport default {\n  Map,\n  Marker\n};\n","import TileConversion from './TileConversion';\nimport TileLayer from './TileLayer';\nimport { defaultMapOptions } from './defaultOptions';\n\nexport default class Map {\n\n  constructor(canvas, options) {\n    if (!canvas || !canvas.getContext) {\n      throw new Error('Could not get canvas context');\n    }\n\n    this.canvas = canvas;\n    this.context = this.canvas.getContext('2d');\n\n    this.options = Object.assign({}, defaultMapOptions, options);\n\n    this.initializeState();\n    this.attachEvents();\n    this.applyStyles();\n\n    this.lastDrawState = null;\n\n    this.draw = this.draw.bind(this);\n    window.requestAnimationFrame(this.draw);\n  }\n\n  initializeState() {\n    this.state = {\n      canvasDimensions: [this.canvas.width, this.canvas.height],\n      tiles: {},\n      moveOffset: [0, 0],\n      targetMoveOffset: [0, 0],\n      targetMoveOffsetIsCoord: false,\n      moveAnimationStart: null,\n      dragStartPosition: null,\n      lastEventActionTime: null,\n      startZoom: this.options.zoom,\n      targetZoom: this.options.zoom,\n      zoomAnimationStart: null,\n      scale: 1,\n      lastMouseMoveEvent: null,\n      mouseVelocities: [],\n      markers: [],\n      tileLayers: [\n        new TileLayer(this)\n      ]\n    };\n  }\n\n  getZoom() {\n    return this.options.zoom;\n  }\n\n  setZoom(zoom) {\n    if (this.zoomValueIsValid(zoom)) {\n      this.state.tileLayers.push(new TileLayer(this, zoom));\n      // this.state.tileLayers[0].tilesZoomLevel = this.options.zoom;\n\n      this.state.lastEventActionTime = window.performance.now();\n      this.state.zoomAnimationStart = window.performance.now();\n      this.state.targetZoom = zoom;\n      this.state.startZoom = this.options.zoom;\n    }\n  }\n\n  setCenter(coord) {\n    if (!Array.isArray(coord) || coord.length !== 2) {\n      throw new Error('Please provide a valid array with a lat/lon');\n    }\n\n    coord = coord.map(coord => parseFloat(coord));\n\n    this.state.moveAnimationStart = window.performance.now();\n    this.state.targetMoveOffset = coord;\n    this.state.targetMoveOffsetIsCoord = true;\n  }\n\n  setTargetMoveOffset(x, y, animated = true) {\n    if (animated) {\n      this.state.moveAnimationStart = window.performance.now();\n\n      this.state.targetMoveOffset = TileConversion.pixelToLatLon(\n        [x, y],\n        this.options.center,\n        this.options.zoom,\n        this.options.tileSize\n      );\n\n      this.state.targetMoveOffsetIsCoord = true;\n    } else {\n      this.state.targetMoveOffset = [x, y];\n      this.state.targetMoveOffsetIsCoord = false;\n\n      this.state.moveOffset = this.state.targetMoveOffset;\n    }\n  }\n\n  zoomValueIsValid(zoom) {\n    return zoom >= 1 && zoom <= 18;\n  }\n\n  isReadyForEvent() {\n    if (!this.state.lastEventActionTime) {\n      return true;\n    }\n\n    const now = window.performance.now();\n    const milliSecondsSinceLastEvent = now - this.state.lastEventActionTime;\n\n    return milliSecondsSinceLastEvent > this.options.debounceIntervalMs;\n  }\n\n  calculateVelocity(position1, position2, time1, time2) {\n    return ((position1 - position2) / (time1 - time2)) * 1000;\n  }\n\n  attachEvents() {\n    this.canvas.addEventListener('wheel', event => {\n      event.preventDefault();\n\n      if (this.isReadyForEvent()) {\n        if (event.deltaY > 5) {\n          this.setZoom(this.options.zoom - 1);\n        } else if (event.deltaY < -5) {\n          this.setZoom(this.options.zoom + 1);\n        }\n      }\n    });\n\n    this.canvas.addEventListener('dblclick', event => {\n      event.preventDefault();\n\n      const centerX = this.state.canvasDimensions[0] / 2;\n      const centerY = this.state.canvasDimensions[1] / 2;\n\n      this.setTargetMoveOffset(\n        -(event.clientX - centerX),\n        -(event.clientY - centerY)\n      );\n\n      this.setZoom(this.options.zoom + 1);\n    });\n\n    this.canvas.addEventListener('mousedown', event => {\n      event.preventDefault();\n\n      this.state.mouseVelocities = [];\n\n      this.state.dragStartPosition = [\n        event.clientX - this.state.moveOffset[0],\n        event.clientY - this.state.moveOffset[1]\n      ];\n    });\n\n    this.canvas.addEventListener('mouseup', event => {\n      event.preventDefault();\n\n      const x = -(this.state.dragStartPosition[0] - event.clientX);\n      const y = -(this.state.dragStartPosition[1] - event.clientY);\n\n      if (this.state.moveOffset[0] !== 0 || this.state.moveOffset[1] !== 0) {\n        const now = window.performance.now();\n        const timingThreshold = now - this.options.throwTimingThresholdMs;\n\n        const thresholdsToConsider = this.state.mouseVelocities\n          .filter(threshold => threshold[0] > timingThreshold)\n          .map(threshold => threshold[1]);\n\n        const velocitySum = thresholdsToConsider.reduce(\n          (accumulator, velocity) => accumulator + velocity,\n          0\n        );\n\n        const averageVelocity = velocitySum / thresholdsToConsider.length;\n\n        if (averageVelocity >= this.options.throwVelocityThreshold) {\n          let multiplier = averageVelocity / this.options.throwVelocityThreshold\n            * this.options.panAccelerationMultiplier;\n\n          multiplier = Math.min(multiplier, this.options.maxPanAcceleration);\n\n          this.setTargetMoveOffset(\n            x * multiplier,\n            y * multiplier\n          );\n        } else {\n          this.updateCenter();\n        }\n      }\n\n      this.state.dragStartPosition = null;\n    });\n\n    this.canvas.addEventListener('mousemove', event => {\n      event.preventDefault();\n\n      if (this.state.dragStartPosition) {\n        const x = -(this.state.dragStartPosition[0] - event.clientX);\n        const y = -(this.state.dragStartPosition[1] - event.clientY);\n\n        const now = window.performance.now();\n\n        const vx = this.calculateVelocity(this.state.moveOffset[0], x, now, this.state.lastMouseMoveEvent);\n        const vy = this.calculateVelocity(this.state.moveOffset[1], y, now, this.state.lastMouseMoveEvent);\n\n        const velocity = Math.round(Math.sqrt((vx * vx) + (vy * vy)));\n\n        this.state.mouseVelocities.push([now, velocity]);\n\n        this.setTargetMoveOffset(x, y, false);\n        this.state.lastMouseMoveEvent = window.performance.now();\n      }\n\n      return false;\n    });\n  }\n\n  applyStyles() {\n    this.canvas.style.cursor = 'grab';\n  }\n\n  easeOutQuad(time) {\n    return time * (2 - time);\n  }\n\n  updateMoveOffset() {\n    const targetMoveOffsetChanged = this.state.moveOffset !== this.state.targetMoveOffset;\n\n    if (targetMoveOffsetChanged) {\n      const timestamp = window.performance.now();\n\n      const progress = Math.max(timestamp - this.state.moveAnimationStart, 0);\n      const percentage = this.easeOutQuad(progress / this.options.animationDurationMs);\n\n      let targetMoveOffset = this.state.targetMoveOffset;\n\n      if (this.state.targetMoveOffsetIsCoord) {\n        targetMoveOffset = TileConversion.latLonToPixel(\n          this.state.targetMoveOffset,\n          this.options.center,\n          this.options.zoom,\n          this.options.tileSize,\n          this.state.canvasDimensions\n        );\n      }\n\n      if (percentage >= 0.99) {\n        this.state.moveOffset = targetMoveOffset;\n      } else {\n        this.state.moveOffset = [\n          this.state.moveOffset[0] + (targetMoveOffset[0] - this.state.moveOffset[0]) * percentage,\n          this.state.moveOffset[1] + (targetMoveOffset[1] - this.state.moveOffset[1]) * percentage\n        ];\n      }\n\n      const targetHasBeenReached = this.state.moveOffset === targetMoveOffset;\n\n      if (targetHasBeenReached) {\n        this.updateCenter();\n      }\n    }\n  }\n\n  updateCenter() {\n    const latLon = TileConversion.pixelToLatLon(\n      this.state.moveOffset,\n      this.options.center,\n      this.options.zoom,\n      this.options.tileSize\n    );\n\n    this.setTargetMoveOffset(0, 0, false);\n    this.options.center = latLon;\n  }\n\n  updateZoom() {\n    if (this.options.zoom !== this.state.targetZoom) {\n      const progress = Math.max(window.performance.now() - this.state.zoomAnimationStart, 0);\n      const percentage = this.easeOutQuad(progress / this.options.animationDurationMs);\n\n      let differenceFromTarget = Math.abs(this.state.targetZoom - this.state.startZoom);\n\n      if (this.state.targetZoom <= this.state.startZoom) {\n        differenceFromTarget *= -1;\n      }\n\n      const newZoomDiff = differenceFromTarget * percentage;\n      const remainingTime = this.options.animationDurationMs - progress;\n\n      this.options.zoom = remainingTime <= 5\n        ? this.state.targetZoom\n        : (this.state.startZoom + newZoomDiff);\n\n      const roundedZoom = Math.round(this.options.zoom);\n      const diff = this.options.zoom - roundedZoom;\n\n      this.state.scale = Math.pow(2, diff);\n\n      if (this.options.zoom === this.state.targetZoom) {\n        // Mark old tile layer for deletion\n        this.state.tileLayers.shift();\n        this.state.tileLayers[0].tilesZoomLevel = null;\n\n        // this.state.tileLayers[this.state.tileLayers.length - 1].shouldBeDeleted = true;\n      }\n    } else {\n      this.state.scale = 1;\n    }\n  }\n\n  garbageCollect() {\n    const allTiles = Object.values(this.state.tiles);\n\n    if (allTiles.length > this.maxTilesToKeep()) {\n      const tileExpirationCutOff = new Date().getTime() - 5000;\n\n      const tilesToConsider = allTiles\n        .filter(tile => tile.lastRequested < tileExpirationCutOff)\n        .sort((a, b) => ~~(a.lastRequested < b.lastRequested));\n\n      const tilesToDeleteCount = this.maxTilesToKeep() - (allTiles.length - tilesToConsider.length);\n\n      tilesToConsider\n        .splice(tilesToConsider.length - tilesToDeleteCount)\n        .forEach(tile => {\n          tile.src = '';\n          delete this.state.tiles[tile.tileId];\n        });\n    }\n  }\n\n  maxTilesToKeep() {\n    return 1000;\n  }\n\n  shouldRedraw() {\n    const drawState = JSON.stringify([this.state, this.options]);\n\n    if (this.lastDrawState !== drawState) {\n      this.lastDrawState = drawState;\n\n      return true;\n    }\n\n    return false;\n  }\n\n  draw() {\n    this.updateMoveOffset();\n    this.updateZoom();\n    this.state.tileLayers.forEach(tileLayer => tileLayer.calculateGrid());\n    this.garbageCollect();\n\n    if (this.shouldRedraw()) {\n      // Delete tile layers that are ready for deletion and mostly loaded\n      /*\n      this.state.tileLayers = this.state.tileLayers\n        .filter(tileLayer => !(tileLayer.shouldBeDeleted && tileLayer.loadedPercentage() >= 0.9));\n\n      console.log(this.state.tileLayers.length);\n      */\n\n      if (this.state.tileLayers.length > 0) {\n        // Only draw the top layer\n        this.state.tileLayers[0].drawTiles(this.state.scale);\n      }\n\n      this.drawMarkers();\n    }\n\n    window.requestAnimationFrame(this.draw);\n  }\n\n  getMapBounds() {\n    const nw = TileConversion.pixelToLatLon(\n      [this.state.canvasDimensions[0] / 2, (this.state.canvasDimensions[1] / 2)],\n      this.options.center,\n      this.options.zoom,\n      this.options.tileSize\n    );\n\n    const se = TileConversion.pixelToLatLon(\n      [-this.state.canvasDimensions[0] / 2, -(this.state.canvasDimensions[1] / 2)],\n      this.options.center,\n      this.options.zoom,\n      this.options.tileSize\n    );\n\n    return {\n      nw, se\n    };\n  }\n\n  drawMarkers() {\n    const bounds = this.getMapBounds();\n\n    const visibleMarkers = this.state.markers.filter(marker => {\n      return marker.coords[0] <= bounds.nw[0] && marker.coords[0] >= bounds.se[0]\n        && marker.coords[1] >= bounds.nw[1] && marker.coords[1] <= bounds.se[1];\n    });\n\n    const center = [\n      this.state.canvasDimensions[0] / 2,\n      this.state.canvasDimensions[1] / 2\n    ];\n\n    visibleMarkers.map(marker => {\n      const position = TileConversion.latLonToPixel(\n        marker.coords,\n        this.options.center,\n        this.options.zoom,\n        this.options.tileSize,\n        this.state.canvasDimensions\n      );\n\n      marker.render(this.context, [\n        center[0] - position[0] + this.state.moveOffset[0],\n        center[1] - position[1] + this.state.moveOffset[1]\n      ]);\n    });\n  }\n\n  addMarker(marker) {\n    this.state.markers.push(marker);\n  }\n\n}\n","import TileConversion from './TileConversion';\nimport Tile from './Tile';\n\nexport default class TileLayer {\n\n  constructor(map, tilesZoomLevel = null) {\n    this.map = map;\n    this.tilesZoomLevel = tilesZoomLevel;\n    this.shouldBeDeleted = false;\n\n    this.context = map.context;\n\n    this.state = {\n      grid: [],\n      gridHash: null,\n      relativeTileOffset: [0, 0]\n    };\n  }\n\n  toJSON() {\n    return [\n      this.state,\n      this.loadedPercentage() // We want a change in loaded tiles to possibly trigger a redraw\n    ];\n  }\n\n  getTilesCount(canvasSize) {\n    let tilesCount = Math.ceil(canvasSize / this.map.options.tileSize) * this.map.options.tileAreaMultiplier;\n\n    if (tilesCount % 2 === 0) {\n      tilesCount++;\n    }\n\n    return tilesCount;\n  }\n\n  calculateGrid() {\n    const { state, options } = this.map;\n\n    const centerY = TileConversion.lat2tile(options.center[0], Math.round(this.tilesZoomLevel || options.zoom), false);\n    const centerX = TileConversion.lon2tile(options.center[1], Math.round(this.tilesZoomLevel || options.zoom), false);\n    const gridHash = [centerY, centerX].join(',');\n\n    const gridNeedsToBeUpdated = this.state.gridHash !== gridHash;\n\n    if (!gridNeedsToBeUpdated) {\n      return;\n    }\n\n    const horizontalTiles = this.getTilesCount(state.canvasDimensions[0]);\n    const verticalTiles = this.getTilesCount(state.canvasDimensions[1]);\n\n    // noinspection JSSuspiciousNameCombination\n    const centerYRounded = Math.floor(centerY);\n    const centerXRounded = Math.floor(centerX);\n\n    this.state.relativeTileOffset = [\n      Math.abs(centerX - centerXRounded),\n      Math.abs(centerY - centerYRounded)\n    ];\n\n    const startX = centerXRounded - Math.floor(horizontalTiles / 2);\n    const startY = centerYRounded - Math.floor(verticalTiles / 2);\n\n    let grid = [];\n\n    for (let y = 0; y < verticalTiles; y++) {\n      for (let x = 0; x < horizontalTiles; x++) {\n        if (!grid[x]) {\n          grid[x] = [];\n        }\n\n        const tileX = startX + x;\n        const tileY = startY + y;\n\n        if (tileX >= 0 && tileY >= 0) {\n          grid[x][y] = new Tile(tileX, tileY, Math.round(this.tilesZoomLevel || options.zoom));\n          this.ensureTileAsset(grid[x][y]);\n        }\n      }\n    }\n\n    this.state.grid = grid;\n    this.state.gridHash = gridHash;\n  }\n\n  ensureTileAsset(tile) {\n    if (!(tile.id in this.map.state.tiles)) {\n      const tileUrl = this.map.options.source(Math.floor(tile.x), Math.floor(tile.y), tile.zoom);\n\n      this.map.state.tiles[tile.id] = new Image();\n      this.map.state.tiles[tile.id].tileId = tile.id;\n      this.map.state.tiles[tile.id].src = tileUrl;\n      this.map.state.tiles[tile.id].loaded = false;\n      this.map.state.tiles[tile.id].onload = () => {\n        this.map.state.tiles[tile.id].loaded = true;\n      };\n    }\n\n    this.map.state.tiles[tile.id].lastRequested = new Date().getTime();\n  }\n\n  drawTiles(scale) {\n    const canvasWidth = this.map.state.canvasDimensions[0];\n    const canvasHeight = this.map.state.canvasDimensions[1];\n\n    const tileSize = this.map.options.tileSize * scale;\n\n    const centerOffset = [\n      tileSize / 2 - (this.state.relativeTileOffset[0] * tileSize),\n      tileSize / 2 - (this.state.relativeTileOffset[1] * tileSize)\n    ];\n\n    this.context.fillStyle = '#EEE';\n    this.context.fillRect(0, 0, canvasWidth, canvasHeight);\n\n    const horizontalTiles = this.getTilesCount(canvasWidth);\n    const verticalTiles = this.getTilesCount(canvasHeight);\n\n    const horizontalOverflow = (horizontalTiles * tileSize) - canvasWidth;\n    const verticalOverflow = (verticalTiles * tileSize) - canvasHeight;\n\n    for (let y = 0; y < verticalTiles; y++) {\n      for (let x = 0; x < horizontalTiles; x++) {\n        const tile = this.state.grid[x][y];\n\n        if (tile) {\n          const tileX = this.map.state.moveOffset[0] + centerOffset[0]\n            + (x * tileSize - horizontalOverflow / 2);\n\n          const tileY = this.map.state.moveOffset[1] + centerOffset[1]\n            + (y * tileSize - verticalOverflow / 2);\n\n          try {\n            if (this.map.state.tiles[tile.id].loaded) {\n              this.context.drawImage(this.map.state.tiles[tile.id], tileX, tileY, tileSize, tileSize);\n            } else {\n              this.drawGenericBackground(tileX, tileY, tileSize);\n            }\n          } catch (err) {\n            this.drawGenericBackground(tileX, tileY, tileSize);\n          }\n\n          if (this.map.options.debug) {\n            this.context.strokeStyle = 'green';\n            this.context.strokeRect(tileX, tileY, tileSize, tileSize);\n          }\n        }\n      }\n    }\n\n    if (this.map.options.debug) {\n      this.context.fillStyle = 'rgba(200, 0, 0, 0.7)';\n      this.context.beginPath();\n      this.context.arc(canvasWidth / 2, canvasHeight / 2, 5, 0, 2 * Math.PI);\n      this.context.fill();\n    }\n  }\n\n  drawGenericBackground(x, y, size) {\n    const increment = size / 8;\n\n    this.context.beginPath();\n    for (let lineX = increment; lineX < size; lineX += increment) {\n      for (let lineY = increment; lineY < size; lineY += increment) {\n        this.context.moveTo(x, y + lineY);\n        this.context.lineTo(x + size, y + lineY);\n\n        this.context.moveTo(x + lineX, y);\n        this.context.lineTo(x + lineX, y + size);\n      }\n    }\n    this.context.strokeStyle = '#DDD';\n    this.context.stroke();\n\n    this.context.strokeStyle = '#CCC';\n    this.context.strokeRect(x, y, size, size);\n  }\n\n  loadedPercentage() {\n    const horizontalTiles = this.getTilesCount(this.map.state.canvasDimensions[0]);\n    const verticalTiles = this.getTilesCount(this.map.state.canvasDimensions[1]);\n\n    const totalTiles = horizontalTiles * verticalTiles;\n    let loadedTiles = 0;\n\n    for (let y = 0; y < verticalTiles; y++) {\n      for (let x = 0; x < horizontalTiles; x++) {\n        const tile = this.state.grid[x][y];\n\n        if (this.map.state.tiles[tile.id].loaded) {\n          loadedTiles++;\n        }\n      }\n    }\n\n    return loadedTiles / totalTiles;\n  }\n}\n","export default class Tile {\n  constructor(x, y, zoom) {\n    this._x = x;\n    this._y = y;\n    this._zoom = zoom;\n  }\n\n  get x() {\n    return this._x;\n  }\n\n  get y() {\n    return this._y;\n  }\n\n  get zoom() {\n    return this._zoom;\n  }\n\n  get id() {\n    return [this.x, this.y, this.zoom].join('|');\n  }\n}\n","import { defaultMarkerOptions } from './defaultOptions';\n\nexport default class Marker {\n  constructor(coords, options = {}) {\n    this._coords = coords;\n    this._options = Object.assign({}, defaultMarkerOptions, options);\n  }\n\n  get coords() {\n    return this._coords;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  render(context, position) {\n    let renderFunction = null;\n\n    switch (this.options.type) {\n      case 'marker':\n        renderFunction = this.renderMarker;\n        break;\n\n      case 'circle':\n        renderFunction = this.renderCircle;\n        break;\n\n      case 'donut':\n        renderFunction = this.renderDonut;\n        break;\n    }\n\n    if (!renderFunction) {\n      throw new Error(`Unsupported marker type: \"${this.options.type}\"`);\n    } else {\n      context.fillStyle = this.options.color;\n      context.strokeStyle = this.options.color;\n\n      renderFunction = renderFunction.bind(this);\n      renderFunction(context, position);\n    }\n  }\n\n  renderCircle(context, position) {\n    context.save();\n    context.beginPath();\n    context.arc(position[0], position[1], 5, 0, 2 * Math.PI);\n    context.fill();\n    context.restore();\n  }\n\n  renderDonut(context, position) {\n    context.save();\n    context.beginPath();\n    context.lineWidth = 5;\n    context.arc(position[0], position[1], 7, 0, 2 * Math.PI);\n    context.stroke();\n    context.restore();\n  }\n\n  renderMarker(context, position) {\n    const markerWidth = 17.698069;\n    const markerHeight = 24.786272;\n\n    const x = position[0] - markerWidth / 2;\n    const y = position[1] - markerHeight;\n\n    context.save();\n    context.transform(0.184386, 0.000000, 0.000000, 0.184386, 0.551658 + x, 4.095760 + y);\n    context.beginPath();\n    context.lineWidth = 1.667195;\n    context.moveTo(45.000000, -22.212949);\n    context.bezierCurveTo(18.494941, -22.212949, -2.991863, -0.726145, -2.991863, 25.778914);\n    context.bezierCurveTo(-2.991863, 52.282306, 45.000000, 112.212950, 45.000000, 112.212950);\n    context.bezierCurveTo(45.000000, 112.212950, 92.991863, 52.282306, 92.991863, 25.777247);\n    context.bezierCurveTo(92.991863, -0.726145, 71.505059, -22.212949, 45.000000, -22.212949);\n    context.moveTo(45.000000, 43.827962);\n    context.bezierCurveTo(33.553042, 43.827962, 24.273437, 34.550024, 24.273437, 23.103067);\n    context.bezierCurveTo(24.273437, 11.656109, 33.553042, 2.376504, 45.000000, 2.376504);\n    context.bezierCurveTo(56.446958, 2.376504, 65.726563, 11.654442, 65.726563, 23.101399);\n    context.bezierCurveTo(65.726563, 34.548357, 56.446958, 43.827962, 45.000000, 43.827962);\n    context.fill();\n    context.restore();\n  }\n}\n"],"sourceRoot":""}